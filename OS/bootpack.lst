     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_init_gdtidt
     7 00000000                                 	EXTERN	_init_pic
     8 00000000                                 	EXTERN	_ini_keybuf
     9 00000000                                 	EXTERN	_io_sti
    10 00000000                                 	EXTERN	_io_out8
    11 00000000                                 	EXTERN	_init_palette
    12 00000000                                 	EXTERN	_boxfill8
    13 00000000                                 	EXTERN	_init_mouse_cursol
    14 00000000                                 	EXTERN	_putblock8_8
    15 00000000                                 	EXTERN	_io_cli
    16 00000000                                 	EXTERN	_keybord_data_num
    17 00000000                                 	EXTERN	_mouse_data_num
    18 00000000                                 	EXTERN	_get_mouse_data
    19 00000000                                 	EXTERN	_sprintf
    20 00000000                                 	EXTERN	_putstr8_asc
    21 00000000                                 	EXTERN	_get_keybord_data
    22 00000000                                 	EXTERN	_io_stihlt
    23 00000000                                 	EXTERN	_io_in8
    24 00000000                                 [FILE "bootpack.c"]
    25                                          [SECTION .data]
    26 00000000                                 LC1:
    27 00000000 25 32 64 20 25 32 64 20 25 32   	DB	"%2d %2d %2d",0x00
       0000000A 64 00 
    28 0000000C                                 LC0:
    29 0000000C 25 30 32 58 00                  	DB	"%02X",0x00
    30                                          [SECTION .text]
    31 00000000                                 	GLOBAL	_HariMain
    32 00000000                                 _HariMain:
    33 00000000 55                              	PUSH	EBP
    34 00000001 89 E5                           	MOV	EBP,ESP
    35 00000003 57                              	PUSH	EDI
    36 00000004 56                              	PUSH	ESI
    37 00000005 BE 00000002                     	MOV	ESI,2
    38 0000000A 53                              	PUSH	EBX
    39 0000000B 8D 5D 94                        	LEA	EBX,DWORD [-108+EBP]
    40 0000000E 83 EC 64                        	SUB	ESP,100
    41 00000011 E8 [00000000]                   	CALL	_init_gdtidt
    42 00000016 E8 [00000000]                   	CALL	_init_pic
    43 0000001B E8 [00000000]                   	CALL	_ini_keybuf
    44 00000020 E8 [00000000]                   	CALL	_io_sti
    45 00000025 68 000000F9                     	PUSH	249
    46 0000002A 6A 21                           	PUSH	33
    47 0000002C E8 [00000000]                   	CALL	_io_out8
    48 00000031 68 000000EF                     	PUSH	239
    49 00000036 68 000000A1                     	PUSH	161
    50 0000003B E8 [00000000]                   	CALL	_io_out8
    51 00000040 E8 000002CE                     	CALL	_init_keyboard
    52 00000045 E8 [00000000]                   	CALL	_init_palette
    53 0000004A 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
    54 00000051 48                              	DEC	EAX
    55 00000052 50                              	PUSH	EAX
    56 00000053 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
    57 0000005A 48                              	DEC	EAX
    58 0000005B 50                              	PUSH	EAX
    59 0000005C 6A 00                           	PUSH	0
    60 0000005E 6A 00                           	PUSH	0
    61 00000060 6A 03                           	PUSH	3
    62 00000062 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
    63 00000069 50                              	PUSH	EAX
    64 0000006A FF 35 00000FF8                  	PUSH	DWORD [4088]
    65 00000070 E8 [00000000]                   	CALL	_boxfill8
    66 00000075 83 C4 2C                        	ADD	ESP,44
    67 00000078 6A 03                           	PUSH	3
    68 0000007A 53                              	PUSH	EBX
    69 0000007B E8 [00000000]                   	CALL	_init_mouse_cursol
    70 00000080 A1 00000FF4                     	MOV	EAX,DWORD [4084]
    71 00000085 66 99                           	CWD
    72 00000087 66 F7 FE                        	IDIV	SI
    73 0000008A 0F BF F8                        	MOVSX	EDI,AX
    74 0000008D 66 A1 00000FF6                  	MOV	AX,WORD [4086]
    75 00000093 53                              	PUSH	EBX
    76 00000094 66 99                           	CWD
    77 00000096 66 F7 FE                        	IDIV	SI
    78 00000099 0F BF F0                        	MOVSX	ESI,AX
    79 0000009C 56                              	PUSH	ESI
    80 0000009D 57                              	PUSH	EDI
    81 0000009E 6A 08                           	PUSH	8
    82 000000A0 6A 08                           	PUSH	8
    83 000000A2 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
    84 000000A9 50                              	PUSH	EAX
    85 000000AA FF 35 00000FF8                  	PUSH	DWORD [4088]
    86 000000B0 E8 [00000000]                   	CALL	_putblock8_8
    87 000000B5 8D 45 E4                        	LEA	EAX,DWORD [-28+EBP]
    88 000000B8 83 C4 24                        	ADD	ESP,36
    89 000000BB 50                              	PUSH	EAX
    90 000000BC E8 00000273                     	CALL	_enable_mouse
    91 000000C1 5B                              	POP	EBX
    92 000000C2                                 L15:
    93 000000C2 E8 [00000000]                   	CALL	_io_cli
    94 000000C7 E8 [00000000]                   	CALL	_keybord_data_num
    95 000000CC 89 C3                           	MOV	EBX,EAX
    96 000000CE E8 [00000000]                   	CALL	_mouse_data_num
    97 000000D3 8D 04 18                        	LEA	EAX,DWORD [EAX+EBX*1]
    98 000000D6 85 C0                           	TEST	EAX,EAX
    99 000000D8 0F 84 0000017C                  	JE	L16
   100 000000DE E8 [00000000]                   	CALL	_keybord_data_num
   101 000000E3 85 C0                           	TEST	EAX,EAX
   102 000000E5 0F 85 00000108                  	JNE	L17
   103 000000EB E8 [00000000]                   	CALL	_mouse_data_num
   104 000000F0 85 C0                           	TEST	EAX,EAX
   105 000000F2 74 CE                           	JE	L15
   106 000000F4 E8 [00000000]                   	CALL	_get_mouse_data
   107 000000F9 88 C3                           	MOV	BL,AL
   108 000000FB E8 [00000000]                   	CALL	_io_sti
   109 00000100 0F B6 C3                        	MOVZX	EAX,BL
   110 00000103 50                              	PUSH	EAX
   111 00000104 8D 45 E4                        	LEA	EAX,DWORD [-28+EBP]
   112 00000107 50                              	PUSH	EAX
   113 00000108 E8 00000157                     	CALL	_mouse_decode
   114 0000010D 5A                              	POP	EDX
   115 0000010E 59                              	POP	ECX
   116 0000010F 48                              	DEC	EAX
   117 00000110 75 B0                           	JNE	L15
   118 00000112 8D 46 08                        	LEA	EAX,DWORD [8+ESI]
   119 00000115 50                              	PUSH	EAX
   120 00000116 8D 47 08                        	LEA	EAX,DWORD [8+EDI]
   121 00000119 50                              	PUSH	EAX
   122 0000011A 56                              	PUSH	ESI
   123 0000011B 57                              	PUSH	EDI
   124 0000011C 6A 03                           	PUSH	3
   125 0000011E 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   126 00000125 50                              	PUSH	EAX
   127 00000126 FF 35 00000FF8                  	PUSH	DWORD [4088]
   128 0000012C E8 [00000000]                   	CALL	_boxfill8
   129 00000131 83 C4 1C                        	ADD	ESP,28
   130 00000134 8B 55 E8                        	MOV	EDX,DWORD [-24+EBP]
   131 00000137 8B 4D EC                        	MOV	ECX,DWORD [-20+EBP]
   132 0000013A 01 CE                           	ADD	ESI,ECX
   133 0000013C 01 D7                           	ADD	EDI,EDX
   134 0000013E 0F 88 000000A8                  	JS	L18
   135 00000144                                 L11:
   136 00000144 85 F6                           	TEST	ESI,ESI
   137 00000146 0F 88 00000099                  	JS	L19
   138 0000014C                                 L12:
   139 0000014C 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   140 00000153 83 E8 08                        	SUB	EAX,8
   141 00000156 39 C7                           	CMP	EDI,EAX
   142 00000158 7E 02                           	JLE	L13
   143 0000015A 89 C7                           	MOV	EDI,EAX
   144 0000015C                                 L13:
   145 0000015C 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   146 00000163 83 E8 08                        	SUB	EAX,8
   147 00000166 39 C6                           	CMP	ESI,EAX
   148 00000168 7E 02                           	JLE	L14
   149 0000016A 89 C6                           	MOV	ESI,EAX
   150 0000016C                                 L14:
   151 0000016C 51                              	PUSH	ECX
   152 0000016D 8D 5D D4                        	LEA	EBX,DWORD [-44+EBP]
   153 00000170 52                              	PUSH	EDX
   154 00000171 FF 75 F0                        	PUSH	DWORD [-16+EBP]
   155 00000174 68 [00000000]                   	PUSH	LC1
   156 00000179 53                              	PUSH	EBX
   157 0000017A E8 [00000000]                   	CALL	_sprintf
   158 0000017F 6A 2F                           	PUSH	47
   159 00000181 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   160 00000188 48                              	DEC	EAX
   161 00000189 50                              	PUSH	EAX
   162 0000018A 6A 20                           	PUSH	32
   163 0000018C 6A 00                           	PUSH	0
   164 0000018E 6A 03                           	PUSH	3
   165 00000190 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   166 00000197 50                              	PUSH	EAX
   167 00000198 FF 35 00000FF8                  	PUSH	DWORD [4088]
   168 0000019E E8 [00000000]                   	CALL	_boxfill8
   169 000001A3 83 C4 30                        	ADD	ESP,48
   170 000001A6 53                              	PUSH	EBX
   171 000001A7 6A 07                           	PUSH	7
   172 000001A9 6A 20                           	PUSH	32
   173 000001AB 6A 00                           	PUSH	0
   174 000001AD 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   175 000001B4 50                              	PUSH	EAX
   176 000001B5 FF 35 00000FF8                  	PUSH	DWORD [4088]
   177 000001BB E8 [00000000]                   	CALL	_putstr8_asc
   178 000001C0 8D 45 94                        	LEA	EAX,DWORD [-108+EBP]
   179 000001C3 50                              	PUSH	EAX
   180 000001C4 56                              	PUSH	ESI
   181 000001C5 57                              	PUSH	EDI
   182 000001C6 6A 08                           	PUSH	8
   183 000001C8 6A 08                           	PUSH	8
   184 000001CA 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   185 000001D1 50                              	PUSH	EAX
   186 000001D2 FF 35 00000FF8                  	PUSH	DWORD [4088]
   187 000001D8 E8 [00000000]                   	CALL	_putblock8_8
   188 000001DD 83 C4 34                        	ADD	ESP,52
   189 000001E0 E9 FFFFFEDD                     	JMP	L15
   190 000001E5                                 L19:
   191 000001E5 31 F6                           	XOR	ESI,ESI
   192 000001E7 E9 FFFFFF60                     	JMP	L12
   193 000001EC                                 L18:
   194 000001EC 31 FF                           	XOR	EDI,EDI
   195 000001EE E9 FFFFFF51                     	JMP	L11
   196 000001F3                                 L17:
   197 000001F3 E8 [00000000]                   	CALL	_get_keybord_data
   198 000001F8 88 C3                           	MOV	BL,AL
   199 000001FA E8 [00000000]                   	CALL	_io_sti
   200 000001FF 0F B6 C3                        	MOVZX	EAX,BL
   201 00000202 50                              	PUSH	EAX
   202 00000203 8D 5D D4                        	LEA	EBX,DWORD [-44+EBP]
   203 00000206 68 [0000000C]                   	PUSH	LC0
   204 0000020B 53                              	PUSH	EBX
   205 0000020C E8 [00000000]                   	CALL	_sprintf
   206 00000211 6A 1F                           	PUSH	31
   207 00000213 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   208 0000021A 48                              	DEC	EAX
   209 0000021B 50                              	PUSH	EAX
   210 0000021C 6A 10                           	PUSH	16
   211 0000021E 6A 00                           	PUSH	0
   212 00000220 6A 03                           	PUSH	3
   213 00000222 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   214 00000229 50                              	PUSH	EAX
   215 0000022A FF 35 00000FF8                  	PUSH	DWORD [4088]
   216 00000230 E8 [00000000]                   	CALL	_boxfill8
   217 00000235 83 C4 28                        	ADD	ESP,40
   218 00000238 53                              	PUSH	EBX
   219 00000239 6A 07                           	PUSH	7
   220 0000023B 6A 10                           	PUSH	16
   221 0000023D 6A 00                           	PUSH	0
   222 0000023F 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   223 00000246 50                              	PUSH	EAX
   224 00000247 FF 35 00000FF8                  	PUSH	DWORD [4088]
   225 0000024D E8 [00000000]                   	CALL	_putstr8_asc
   226 00000252 83 C4 18                        	ADD	ESP,24
   227 00000255 E9 FFFFFE68                     	JMP	L15
   228 0000025A                                 L16:
   229 0000025A E8 [00000000]                   	CALL	_io_stihlt
   230 0000025F E9 FFFFFE5E                     	JMP	L15
   231 00000264                                 	GLOBAL	_mouse_decode
   232 00000264                                 _mouse_decode:
   233 00000264 55                              	PUSH	EBP
   234 00000265 89 E5                           	MOV	EBP,ESP
   235 00000267 57                              	PUSH	EDI
   236 00000268 56                              	PUSH	ESI
   237 00000269 31 FF                           	XOR	EDI,EDI
   238 0000026B 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
   239 0000026E 53                              	PUSH	EBX
   240 0000026F 8B 4D 0C                        	MOV	ECX,DWORD [12+EBP]
   241 00000272 0F B6 42 03                     	MOVZX	EAX,BYTE [3+EDX]
   242 00000276 89 CE                           	MOV	ESI,ECX
   243 00000278 83 F8 01                        	CMP	EAX,1
   244 0000027B 74 7C                           	JE	L24
   245 0000027D 83 F8 01                        	CMP	EAX,1
   246 00000280 7E 68                           	JLE	L32
   247 00000282 83 F8 02                        	CMP	EAX,2
   248 00000285 74 5A                           	JE	L25
   249 00000287 83 F8 03                        	CMP	EAX,3
   250 0000028A 74 0A                           	JE	L26
   251 0000028C                                 L29:
   252 0000028C 83 CF FF                        	OR	EDI,-1
   253 0000028F                                 L21:
   254 0000028F 5B                              	POP	EBX
   255 00000290 89 F8                           	MOV	EAX,EDI
   256 00000292 5E                              	POP	ESI
   257 00000293 5F                              	POP	EDI
   258 00000294 5D                              	POP	EBP
   259 00000295 C3                              	RET
   260 00000296                                 L26:
   261 00000296 8A 1A                           	MOV	BL,BYTE [EDX]
   262 00000298 81 E6 000000FF                  	AND	ESI,255
   263 0000029E 89 D8                           	MOV	EAX,EBX
   264 000002A0 88 4A 02                        	MOV	BYTE [2+EDX],CL
   265 000002A3 83 E0 07                        	AND	EAX,7
   266 000002A6 BF 00000001                     	MOV	EDI,1
   267 000002AB 89 42 0C                        	MOV	DWORD [12+EDX],EAX
   268 000002AE 89 72 08                        	MOV	DWORD [8+EDX],ESI
   269 000002B1 88 D8                           	MOV	AL,BL
   270 000002B3 0F B6 4A 01                     	MOVZX	ECX,BYTE [1+EDX]
   271 000002B7 83 E0 10                        	AND	EAX,16
   272 000002BA 89 4A 04                        	MOV	DWORD [4+EDX],ECX
   273 000002BD C6 42 03 01                     	MOV	BYTE [3+EDX],1
   274 000002C1 84 C0                           	TEST	AL,AL
   275 000002C3 74 09                           	JE	L27
   276 000002C5 81 C9 FFFFFF00                  	OR	ECX,-256
   277 000002CB 89 4A 04                        	MOV	DWORD [4+EDX],ECX
   278 000002CE                                 L27:
   279 000002CE 83 E3 20                        	AND	EBX,32
   280 000002D1 84 DB                           	TEST	BL,BL
   281 000002D3 74 07                           	JE	L28
   282 000002D5 81 4A 08 FFFFFF00               	OR	DWORD [8+EDX],-256
   283 000002DC                                 L28:
   284 000002DC F7 5A 08                        	NEG	DWORD [8+EDX]
   285 000002DF EB AE                           	JMP	L21
   286 000002E1                                 L25:
   287 000002E1 88 4A 01                        	MOV	BYTE [1+EDX],CL
   288 000002E4 C6 42 03 03                     	MOV	BYTE [3+EDX],3
   289 000002E8 EB A5                           	JMP	L21
   290 000002EA                                 L32:
   291 000002EA 85 C0                           	TEST	EAX,EAX
   292 000002EC 75 9E                           	JNE	L29
   293 000002EE 80 F9 FA                        	CMP	CL,-6
   294 000002F1 75 9C                           	JNE	L21
   295 000002F3 C6 42 03 01                     	MOV	BYTE [3+EDX],1
   296 000002F7 EB 96                           	JMP	L21
   297 000002F9                                 L24:
   298 000002F9 88 0A                           	MOV	BYTE [EDX],CL
   299 000002FB C6 42 03 02                     	MOV	BYTE [3+EDX],2
   300 000002FF EB 8E                           	JMP	L21
   301 00000301                                 	GLOBAL	_wait_KBC_sendready
   302 00000301                                 _wait_KBC_sendready:
   303 00000301 55                              	PUSH	EBP
   304 00000302 89 E5                           	MOV	EBP,ESP
   305 00000304                                 L38:
   306 00000304 6A 64                           	PUSH	100
   307 00000306 E8 [00000000]                   	CALL	_io_in8
   308 0000030B 5A                              	POP	EDX
   309 0000030C 83 E0 02                        	AND	EAX,2
   310 0000030F 75 F3                           	JNE	L38
   311 00000311 C9                              	LEAVE
   312 00000312 C3                              	RET
   313 00000313                                 	GLOBAL	_init_keyboard
   314 00000313                                 _init_keyboard:
   315 00000313 55                              	PUSH	EBP
   316 00000314 89 E5                           	MOV	EBP,ESP
   317 00000316 E8 FFFFFFE6                     	CALL	_wait_KBC_sendready
   318 0000031B 6A 60                           	PUSH	96
   319 0000031D 6A 64                           	PUSH	100
   320 0000031F E8 [00000000]                   	CALL	_io_out8
   321 00000324 E8 FFFFFFD8                     	CALL	_wait_KBC_sendready
   322 00000329 6A 47                           	PUSH	71
   323 0000032B 6A 60                           	PUSH	96
   324 0000032D E8 [00000000]                   	CALL	_io_out8
   325 00000332 C9                              	LEAVE
   326 00000333 C3                              	RET
   327 00000334                                 	GLOBAL	_enable_mouse
   328 00000334                                 _enable_mouse:
   329 00000334 55                              	PUSH	EBP
   330 00000335 89 E5                           	MOV	EBP,ESP
   331 00000337 E8 FFFFFFC5                     	CALL	_wait_KBC_sendready
   332 0000033C 68 000000D4                     	PUSH	212
   333 00000341 6A 64                           	PUSH	100
   334 00000343 E8 [00000000]                   	CALL	_io_out8
   335 00000348 E8 FFFFFFB4                     	CALL	_wait_KBC_sendready
   336 0000034D 68 000000F4                     	PUSH	244
   337 00000352 6A 60                           	PUSH	96
   338 00000354 E8 [00000000]                   	CALL	_io_out8
   339 00000359 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
   340 0000035C C6 40 03 00                     	MOV	BYTE [3+EAX],0
   341 00000360 C9                              	LEAVE
   342 00000361 C3                              	RET
