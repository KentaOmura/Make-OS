[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_fifo32_init
	EXTERN	_init_keyboard
	EXTERN	_enable_mouse
	EXTERN	_io_out8
	EXTERN	_timer_alloc
	EXTERN	_timer_init
	EXTERN	_timer_settime
	EXTERN	_init_palette
	EXTERN	_shtctl_init
	EXTERN	_sheet_alloc
	EXTERN	_memman_alloc_4k
	EXTERN	_sheet_setbuf
	EXTERN	_boxfill8
	EXTERN	_init_mouse_cursol
	EXTERN	_sheet_slide
	EXTERN	_sheet_updown
	EXTERN	_memman_total
	EXTERN	_sprintf
	EXTERN	_putstr8_asc
	EXTERN	_sheet_refresh
	EXTERN	_io_cli
	EXTERN	_fifo32_status
	EXTERN	_fifo32_get
	EXTERN	_io_sti
	EXTERN	_mouse_decode
	EXTERN	_io_stihlt
	EXTERN	_memtest
	EXTERN	_memman_init
	EXTERN	_memman_free
	EXTERN	_init_gdtidt
	EXTERN	_init_pic
	EXTERN	_init_pit
[FILE "bootpack.c"]
[SECTION .data]
LC0:
	DB	"Timer",0x00
LC1:
	DB	"memory %dMB  free : %dKB",0x00
LC4:
	DB	"3[sec]",0x00
LC3:
	DB	"10[sec]",0x00
LC2:
	DB	"%02X",0x00
[SECTION .text]
	GLOBAL	_HariMain
_HariMain:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	LEA	ESI,DWORD [-124+EBP]
	SUB	ESP,1424
	CALL	_hardWareInit
	LEA	EAX,DWORD [-1148+EBP]
	PUSH	EAX
	PUSH	256
	PUSH	ESI
	CALL	_fifo32_init
	PUSH	256
	PUSH	ESI
	CALL	_init_keyboard
	LEA	EAX,DWORD [-92+EBP]
	PUSH	EAX
	PUSH	512
	PUSH	ESI
	CALL	_enable_mouse
	ADD	ESP,32
	PUSH	248
	PUSH	33
	CALL	_io_out8
	PUSH	239
	PUSH	161
	CALL	_io_out8
	PUSH	3932160
	CALL	_memoryUsage
	MOV	DWORD [ESP],EAX
	PUSH	3932160
	CALL	_memoryInit
	CALL	_timer_alloc
	PUSH	10
	PUSH	ESI
	MOV	EBX,EAX
	PUSH	EAX
	CALL	_timer_init
	ADD	ESP,36
	PUSH	1000
	PUSH	EBX
	CALL	_timer_settime
	CALL	_timer_alloc
	PUSH	3
	PUSH	ESI
	MOV	EBX,EAX
	PUSH	EAX
	CALL	_timer_init
	PUSH	300
	PUSH	EBX
	CALL	_timer_settime
	CALL	_timer_alloc
	PUSH	1
	PUSH	ESI
	PUSH	EAX
	MOV	DWORD [-1428+EBP],EAX
	CALL	_timer_init
	ADD	ESP,40
	PUSH	50
	PUSH	DWORD [-1428+EBP]
	CALL	_timer_settime
	CALL	_init_palette
	MOVSX	EAX,WORD [4086]
	PUSH	EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [4088]
	PUSH	3932160
	CALL	_shtctl_init
	MOV	EBX,EAX
	PUSH	EAX
	CALL	_sheet_alloc
	PUSH	EBX
	MOV	DWORD [-1416+EBP],EAX
	CALL	_sheet_alloc
	ADD	ESP,32
	MOV	DWORD [-1420+EBP],EAX
	PUSH	EBX
	LEA	EBX,DWORD [-1404+EBP]
	CALL	_sheet_alloc
	MOV	ESI,EAX
	MOVSX	EDX,WORD [4086]
	MOVSX	EAX,WORD [4084]
	IMUL	EAX,EDX
	PUSH	EAX
	PUSH	3932160
	CALL	_memman_alloc_4k
	PUSH	10880
	PUSH	3932160
	MOV	DWORD [-1424+EBP],EAX
	CALL	_memman_alloc_4k
	PUSH	-1
	MOV	EDI,EAX
	MOVSX	EAX,WORD [4086]
	PUSH	EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-1424+EBP]
	PUSH	DWORD [-1416+EBP]
	CALL	_sheet_setbuf
	ADD	ESP,40
	PUSH	3
	PUSH	8
	PUSH	8
	PUSH	EBX
	PUSH	DWORD [-1420+EBP]
	CALL	_sheet_setbuf
	PUSH	88
	PUSH	68
	PUSH	160
	PUSH	EDI
	PUSH	ESI
	CALL	_sheet_setbuf
	ADD	ESP,40
	MOVSX	EAX,WORD [4086]
	PUSH	EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	0
	PUSH	0
	PUSH	3
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-1424+EBP]
	CALL	_boxfill8
	PUSH	3
	PUSH	EBX
	MOV	EBX,2
	CALL	_init_mouse_cursol
	ADD	ESP,36
	PUSH	LC0
	PUSH	68
	PUSH	160
	PUSH	EDI
	LEA	EDI,DWORD [-1412+EBP]
	CALL	_makeWindow8
	PUSH	0
	PUSH	0
	PUSH	DWORD [-1416+EBP]
	CALL	_sheet_slide
	MOVSX	EAX,WORD [4084]
	LEA	ECX,DWORD [-8+EAX]
	MOV	EAX,ECX
	CDQ
	IDIV	EBX
	MOV	ECX,EAX
	MOV	DWORD [-1412+EBP],EAX
	MOVSX	EAX,WORD [4086]
	SUB	EAX,36
	CDQ
	IDIV	EBX
	PUSH	EAX
	MOV	DWORD [-1408+EBP],EAX
	PUSH	ECX
	LEA	EBX,DWORD [-76+EBP]
	PUSH	DWORD [-1420+EBP]
	CALL	_sheet_slide
	ADD	ESP,40
	PUSH	72
	PUSH	80
	PUSH	ESI
	CALL	_sheet_slide
	PUSH	0
	PUSH	DWORD [-1416+EBP]
	CALL	_sheet_updown
	PUSH	1
	PUSH	ESI
	CALL	_sheet_updown
	PUSH	2
	PUSH	DWORD [-1420+EBP]
	CALL	_sheet_updown
	ADD	ESP,36
	PUSH	3932160
	CALL	_memman_total
	SHR	EAX,10
	MOV	DWORD [ESP],EAX
	MOV	EAX,DWORD [3932160]
	SHR	EAX,20
	PUSH	EAX
	PUSH	LC1
	PUSH	EBX
	CALL	_sprintf
	PUSH	EBX
	PUSH	7
	PUSH	48
	PUSH	0
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-1424+EBP]
	CALL	_putstr8_asc
	ADD	ESP,40
	PUSH	64
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	0
	PUSH	0
	PUSH	DWORD [-1416+EBP]
	CALL	_sheet_refresh
	ADD	ESP,20
L18:
	LEA	ESI,DWORD [-124+EBP]
	CALL	_io_cli
	PUSH	ESI
	CALL	_fifo32_status
	POP	ECX
	TEST	EAX,EAX
	JE	L22
	PUSH	ESI
	CALL	_fifo32_get
	MOV	EBX,EAX
	CALL	_io_sti
	POP	EDX
	LEA	EAX,DWORD [-256+EBX]
	CMP	EAX,255
	JBE	L23
	LEA	EAX,DWORD [-512+EBX]
	CMP	EAX,255
	JBE	L24
	CMP	EBX,10
	JE	L25
	CMP	EBX,3
	JE	L26
	TEST	EBX,EBX
	JE	L16
	PUSH	0
	PUSH	ESI
	PUSH	DWORD [-1428+EBP]
	CALL	_timer_init
	PUSH	111
	PUSH	15
	PUSH	96
	PUSH	8
	PUSH	7
L20:
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-1424+EBP]
	CALL	_boxfill8
	ADD	ESP,40
	PUSH	50
	PUSH	DWORD [-1428+EBP]
	CALL	_timer_settime
	PUSH	112
	PUSH	16
	PUSH	96
	PUSH	8
	PUSH	DWORD [-1416+EBP]
	CALL	_sheet_refresh
L19:
	ADD	ESP,28
	JMP	L18
L16:
	PUSH	1
	PUSH	ESI
	PUSH	DWORD [-1428+EBP]
	CALL	_timer_init
	PUSH	111
	PUSH	15
	PUSH	96
	PUSH	8
	PUSH	3
	JMP	L20
L26:
	PUSH	6
	PUSH	LC4
	PUSH	3
	PUSH	7
	PUSH	80
L21:
	PUSH	0
	PUSH	DWORD [-1416+EBP]
	CALL	_putfont8_sht
	JMP	L19
L25:
	PUSH	7
	PUSH	LC3
	PUSH	3
	PUSH	7
	PUSH	64
	JMP	L21
L24:
	MOVZX	EAX,BL
	PUSH	EAX
	LEA	EAX,DWORD [-92+EBP]
	PUSH	EAX
	CALL	_mouse_decode
	POP	EDX
	POP	ECX
	DEC	EAX
	JNE	L18
	MOV	EAX,DWORD [-88+EBP]
	ADD	DWORD [-1412+EBP],EAX
	MOV	EAX,DWORD [-84+EBP]
	ADD	DWORD [4+EDI],EAX
	MOVSX	EAX,WORD [4086]
	PUSH	EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	EDI
	CALL	_MouseCoodinateThreshold
	PUSH	DWORD [4+EDI]
	PUSH	DWORD [-1412+EBP]
	PUSH	DWORD [-1420+EBP]
	CALL	_sheet_slide
	ADD	ESP,24
	JMP	L18
L23:
	PUSH	EAX
	LEA	EBX,DWORD [-76+EBP]
	PUSH	LC2
	PUSH	EBX
	CALL	_sprintf
	PUSH	3
	PUSH	EBX
	PUSH	3
	PUSH	7
	PUSH	16
	PUSH	0
	PUSH	DWORD [-1416+EBP]
	CALL	_putfont8_sht
	ADD	ESP,40
	JMP	L18
L22:
	CALL	_io_stihlt
	JMP	L18
	GLOBAL	_memoryUsage
_memoryUsage:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	-1073741825
	PUSH	4194304
	CALL	_memtest
	LEAVE
	RET
	GLOBAL	_memoryInit
_memoryInit:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EBX
	MOV	EBX,DWORD [12+EBP]
	MOV	ESI,DWORD [8+EBP]
	PUSH	EBX
	SUB	EBX,4194304
	PUSH	ESI
	CALL	_memman_init
	PUSH	647168
	PUSH	4096
	PUSH	ESI
	CALL	_memman_free
	PUSH	EBX
	PUSH	4194304
	PUSH	ESI
	CALL	_memman_free
	LEA	ESP,DWORD [-8+EBP]
	POP	EBX
	POP	ESI
	POP	EBP
	RET
	GLOBAL	_hardWareInit
_hardWareInit:
	PUSH	EBP
	MOV	EBP,ESP
	CALL	_init_gdtidt
	CALL	_init_pic
	CALL	_io_sti
	POP	EBP
	JMP	_init_pit
	GLOBAL	_MouseCoodinateThreshold
_MouseCoodinateThreshold:
	PUSH	EBP
	MOV	EBP,ESP
	MOV	EAX,DWORD [8+EBP]
	CMP	DWORD [EAX],0
	JS	L35
L31:
	CMP	DWORD [4+EAX],0
	JS	L36
L32:
	MOV	EDX,DWORD [12+EBP]
	DEC	EDX
	CMP	DWORD [EAX],EDX
	JBE	L33
	MOV	DWORD [EAX],EDX
L33:
	MOV	EDX,DWORD [16+EBP]
	DEC	EDX
	CMP	DWORD [4+EAX],EDX
	JBE	L30
	MOV	DWORD [4+EAX],EDX
L30:
	POP	EBP
	RET
L36:
	MOV	DWORD [4+EAX],0
	JMP	L32
L35:
	MOV	DWORD [EAX],0
	JMP	L31
[SECTION .data]
_closebtn.0:
	DB	"OOOOOOOOOOOOOOO@"
	DB	"OQQQQQQQQQQQQQ$@"
	DB	"OQQQQQQQQQQQQQ$@"
	DB	"OQQQ@@QQQQ@@QQ$@"
	DB	"OQQQQ@@QQ@@QQQ$@"
	DB	"OQQQQQ@@@@QQQQ$@"
	DB	"OQQQQQQ@@QQQQQ$@"
	DB	"OQQQQQ@@@@QQQQ$@"
	DB	"OQQQQ@@QQ@@QQQ$@"
	DB	"OQQQ@@QQQQ@@QQ$@"
	DB	"OQQQQQQQQQQQQQ$@"
	DB	"OQQQQQQQQQQQQQ$@"
	DB	"O$$$$$$$$$$$$$$@"
	DB	"@@@@@@@@@@@@@@@@"
[SECTION .text]
	GLOBAL	_makeWindow8
_makeWindow8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,16
	MOV	EBX,DWORD [12+EBP]
	PUSH	0
	LEA	EAX,DWORD [-1+EBX]
	LEA	EDI,DWORD [-2+EBX]
	PUSH	EAX
	MOV	DWORD [-20+EBP],EAX
	PUSH	0
	PUSH	0
	PUSH	8
	PUSH	EBX
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	PUSH	1
	PUSH	EDI
	PUSH	1
	PUSH	1
	PUSH	7
	PUSH	EBX
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [16+EBP]
	ADD	ESP,56
	DEC	EAX
	MOV	DWORD [-24+EBP],EAX
	PUSH	EAX
	PUSH	0
	PUSH	0
	PUSH	0
	PUSH	8
	PUSH	EBX
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	ESI,DWORD [16+EBP]
	SUB	ESI,2
	PUSH	ESI
	PUSH	1
	PUSH	1
	PUSH	1
	PUSH	7
	PUSH	EBX
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	ADD	ESP,56
	PUSH	ESI
	PUSH	EDI
	PUSH	1
	PUSH	EDI
	PUSH	15
	PUSH	EBX
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	PUSH	DWORD [-24+EBP]
	PUSH	DWORD [-20+EBP]
	PUSH	0
	PUSH	DWORD [-20+EBP]
	PUSH	1
	PUSH	EBX
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [16+EBP]
	ADD	ESP,56
	SUB	EAX,3
	PUSH	EAX
	LEA	EAX,DWORD [-3+EBX]
	PUSH	EAX
	PUSH	2
	PUSH	2
	PUSH	8
	PUSH	EBX
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	LEA	EAX,DWORD [-4+EBX]
	PUSH	20
	PUSH	EAX
	PUSH	3
	PUSH	3
	PUSH	7
	PUSH	EBX
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	ADD	ESP,56
	PUSH	ESI
	PUSH	EDI
	XOR	EDI,EDI
	PUSH	ESI
	PUSH	1
	PUSH	15
	PUSH	EBX
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	PUSH	DWORD [-24+EBP]
	PUSH	DWORD [-20+EBP]
	PUSH	DWORD [-24+EBP]
	PUSH	0
	PUSH	7
	PUSH	EBX
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	ADD	ESP,56
	PUSH	DWORD [20+EBP]
	PUSH	0
	PUSH	4
	PUSH	24
	PUSH	EBX
	PUSH	DWORD [8+EBP]
	CALL	_putstr8_asc
	ADD	ESP,24
	IMUL	ECX,EBX,5
	MOV	DWORD [-16+EBP],0
L53:
	LEA	EDX,DWORD [ECX+EBX*1]
	MOV	EAX,DWORD [8+EBP]
	XOR	ESI,ESI
	LEA	EDX,DWORD [-21+EAX+EDX*1]
L52:
	MOV	AL,BYTE [_closebtn.0+ESI+EDI*1]
	CMP	AL,64
	JE	L50
	CMP	AL,36
	JE	L58
	CMP	AL,81
	JE	L59
L50:
	MOV	AL,7
L47:
	INC	ESI
	MOV	BYTE [EDX],AL
	INC	EDX
	CMP	ESI,15
	JLE	L52
	INC	DWORD [-16+EBP]
	ADD	ECX,EBX
	ADD	EDI,16
	CMP	DWORD [-16+EBP],13
	JLE	L53
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L59:
	MOV	AL,1
	JMP	L47
L58:
	MOV	AL,15
	JMP	L47
	GLOBAL	_putfont8_sht
_putfont8_sht:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,12
	MOV	EBX,DWORD [16+EBP]
	MOV	EAX,DWORD [20+EBP]
	MOV	EDI,DWORD [12+EBP]
	MOV	EDX,DWORD [32+EBP]
	MOV	DWORD [-16+EBP],EAX
	MOV	ESI,DWORD [8+EBP]
	MOV	EAX,DWORD [28+EBP]
	MOV	DWORD [-20+EBP],EAX
	LEA	EAX,DWORD [15+EBX]
	PUSH	EAX
	LEA	EAX,DWORD [EDI+EDX*8]
	MOV	DWORD [-24+EBP],EAX
	SUB	EAX,EDX
	PUSH	EAX
	PUSH	EBX
	PUSH	EDI
	MOVZX	EAX,BYTE [24+EBP]
	PUSH	EAX
	PUSH	DWORD [4+ESI]
	PUSH	DWORD [ESI]
	CALL	_boxfill8
	PUSH	DWORD [-20+EBP]
	PUSH	DWORD [-16+EBP]
	PUSH	EBX
	PUSH	EDI
	PUSH	DWORD [4+ESI]
	PUSH	DWORD [ESI]
	CALL	_putstr8_asc
	MOV	DWORD [8+EBP],ESI
	LEA	EAX,DWORD [16+EBX]
	MOV	DWORD [16+EBP],EBX
	MOV	DWORD [24+EBP],EAX
	MOV	DWORD [12+EBP],EDI
	MOV	EAX,DWORD [-24+EBP]
	ADD	ESP,52
	MOV	DWORD [20+EBP],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_sheet_refresh
