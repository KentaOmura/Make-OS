[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_fifo32_init
	EXTERN	_init_keyboard
	EXTERN	_enable_mouse
	EXTERN	_io_out8
	EXTERN	_init_palette
	EXTERN	_shtctl_init
	EXTERN	_task_init
	EXTERN	_sheet_alloc
	EXTERN	_memman_alloc_4k
	EXTERN	_sheet_setbuf
	EXTERN	_boxfill8
	EXTERN	_sprintf
	EXTERN	_task_alloc
	EXTERN	_task_run
	EXTERN	_init_mouse_cursol
	EXTERN	_timer_alloc
	EXTERN	_timer_init
	EXTERN	_timer_settime
	EXTERN	_sheet_slide
	EXTERN	_sheet_updown
	EXTERN	_memman_total
	EXTERN	_putstr8_asc
	EXTERN	_sheet_refresh
	EXTERN	_io_cli
	EXTERN	_fifo32_status
	EXTERN	_fifo32_get
	EXTERN	_io_sti
	EXTERN	_mouse_decode
	EXTERN	_keytable.0
	EXTERN	_task_sleep
	EXTERN	_memtest
	EXTERN	_memman_init
	EXTERN	_memman_free
	EXTERN	_init_gdtidt
	EXTERN	_init_pic
	EXTERN	_init_pit
[FILE "bootpack.c"]
[SECTION .data]
_keytable.0:
	DB	0
	DB	0
	DB	49
	DB	50
	DB	51
	DB	52
	DB	53
	DB	54
	DB	55
	DB	56
	DB	57
	DB	48
	DB	45
	DB	94
	DB	0
	DB	0
	DB	81
	DB	87
	DB	69
	DB	82
	DB	84
	DB	89
	DB	85
	DB	73
	DB	79
	DB	80
	DB	64
	DB	91
	DB	0
	DB	0
	DB	65
	DB	83
	DB	68
	DB	70
	DB	71
	DB	72
	DB	74
	DB	75
	DB	76
	DB	59
	DB	58
	DB	0
	DB	0
	DB	93
	DB	90
	DB	88
	DB	67
	DB	86
	DB	66
	DB	78
	DB	77
	DB	44
	DB	46
	DB	47
	DB	0
	DB	42
	DB	0
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	55
	DB	56
	DB	57
	DB	45
	DB	52
	DB	53
	DB	54
	DB	43
	DB	49
	DB	50
	DB	51
	DB	48
	DB	46
LC0:
	DB	"task_b%d",0x00
LC1:
	DB	"task_a",0x00
LC2:
	DB	"memory %dMB  free : %dKB",0x00
LC3:
	DB	"%02X",0x00
LC4:
	DB	" ",0x00
[SECTION .text]
	GLOBAL	_HariMain
_HariMain:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	ESI,ESI
	PUSH	EBX
	LEA	EBX,DWORD [-124+EBP]
	SUB	ESP,1700
	MOV	DWORD [-1700+EBP],0
	CALL	_hardWareInit
	LEA	EAX,DWORD [-1148+EBP]
	PUSH	0
	PUSH	EAX
	PUSH	256
	PUSH	EBX
	CALL	_fifo32_init
	PUSH	256
	PUSH	EBX
	CALL	_init_keyboard
	LEA	EAX,DWORD [-92+EBP]
	PUSH	EAX
	PUSH	512
	PUSH	EBX
	CALL	_enable_mouse
	ADD	ESP,36
	PUSH	248
	PUSH	33
	CALL	_io_out8
	PUSH	239
	PUSH	161
	CALL	_io_out8
	PUSH	3932160
	CALL	_memoryUsage
	MOV	DWORD [ESP],EAX
	PUSH	3932160
	CALL	_memoryInit
	CALL	_init_palette
	MOVSX	EAX,WORD [4086]
	PUSH	EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [4088]
	PUSH	3932160
	CALL	_shtctl_init
	ADD	ESP,40
	PUSH	3932160
	MOV	DWORD [-1672+EBP],EAX
	CALL	_task_init
	PUSH	DWORD [-1672+EBP]
	MOV	DWORD [-1704+EBP],EAX
	MOV	DWORD [-100+EBP],EAX
	CALL	_sheet_alloc
	MOVSX	EDX,WORD [4086]
	MOV	DWORD [-1676+EBP],EAX
	MOVSX	EAX,WORD [4084]
	IMUL	EAX,EDX
	PUSH	EAX
	PUSH	3932160
	CALL	_memman_alloc_4k
	PUSH	-1
	MOV	DWORD [-1684+EBP],EAX
	MOVSX	EAX,WORD [4086]
	PUSH	EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-1684+EBP]
	PUSH	DWORD [-1676+EBP]
	CALL	_sheet_setbuf
	ADD	ESP,36
	MOVSX	EAX,WORD [4086]
	PUSH	EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	0
	PUSH	0
	PUSH	3
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-1684+EBP]
	CALL	_boxfill8
	ADD	ESP,28
L6:
	PUSH	DWORD [-1672+EBP]
	CALL	_sheet_alloc
	PUSH	7488
	PUSH	3932160
	MOV	DWORD [-1164+EBP+ESI*4],EAX
	CALL	_memman_alloc_4k
	PUSH	-1
	MOV	EBX,EAX
	PUSH	52
	PUSH	144
	PUSH	EAX
	PUSH	DWORD [-1164+EBP+ESI*4]
	CALL	_sheet_setbuf
	LEA	ECX,DWORD [-76+EBP]
	ADD	ESP,32
	PUSH	ESI
	PUSH	LC0
	PUSH	ECX
	CALL	_sprintf
	LEA	EAX,DWORD [-76+EBP]
	PUSH	0
	PUSH	EAX
	PUSH	52
	PUSH	144
	PUSH	EBX
	CALL	_makeWindow8
	ADD	ESP,32
	CALL	_task_alloc
	PUSH	65536
	MOV	EBX,EAX
	PUSH	3932160
	MOV	DWORD [-1660+EBP+ESI*4],EAX
	CALL	_memman_alloc_4k
	MOV	EDX,DWORD [-1164+EBP+ESI*4]
	ADD	EAX,65528
	MOV	DWORD [64+EBX],EAX
	MOV	EAX,DWORD [-1660+EBP+ESI*4]
	INC	ESI
	MOV	ECX,DWORD [64+EAX]
	MOV	DWORD [40+EAX],_task_b_main
	MOV	DWORD [80+EAX],8
	MOV	DWORD [84+EAX],16
	MOV	DWORD [88+EAX],8
	MOV	DWORD [92+EAX],8
	MOV	DWORD [96+EAX],8
	MOV	DWORD [100+EAX],8
	MOV	DWORD [4+ECX],EDX
	PUSH	EAX
	CALL	_task_run
	ADD	ESP,12
	CMP	ESI,2
	JLE	L6
	PUSH	DWORD [-1672+EBP]
	CALL	_sheet_alloc
	PUSH	10880
	PUSH	3932160
	MOV	EDI,EAX
	CALL	_memman_alloc_4k
	PUSH	88
	PUSH	68
	MOV	EBX,EAX
	PUSH	160
	PUSH	EAX
	PUSH	EDI
	CALL	_sheet_setbuf
	ADD	ESP,32
	PUSH	1
	PUSH	LC1
	PUSH	68
	PUSH	160
	PUSH	EBX
	LEA	EBX,DWORD [-1420+EBP]
	CALL	_makeWindow8
	PUSH	7
	PUSH	16
	PUSH	144
	PUSH	28
	PUSH	8
	PUSH	EDI
	CALL	_makeTextbox8
	ADD	ESP,44
	PUSH	DWORD [-1672+EBP]
	CALL	_sheet_alloc
	PUSH	3
	PUSH	8
	PUSH	8
	MOV	DWORD [-1680+EBP],EAX
	PUSH	EBX
	PUSH	EAX
	CALL	_sheet_setbuf
	PUSH	3
	PUSH	EBX
	CALL	_init_mouse_cursol
	ADD	ESP,32
	MOV	DWORD [-1692+EBP],8
	MOV	DWORD [-1696+EBP],7
	CALL	_timer_alloc
	PUSH	1
	MOV	DWORD [-1688+EBP],EAX
	LEA	EAX,DWORD [-124+EBP]
	PUSH	EAX
	PUSH	DWORD [-1688+EBP]
	CALL	_timer_init
	PUSH	50
	PUSH	DWORD [-1688+EBP]
	CALL	_timer_settime
	MOV	ECX,2
	MOVSX	EAX,WORD [4084]
	SUB	EAX,8
	CDQ
	IDIV	ECX
	MOV	DWORD [-1668+EBP],EAX
	MOVSX	EAX,WORD [4086]
	SUB	EAX,36
	PUSH	0
	CDQ
	IDIV	ECX
	PUSH	0
	MOV	DWORD [-1664+EBP],EAX
	PUSH	DWORD [-1676+EBP]
	CALL	_sheet_slide
	ADD	ESP,32
	PUSH	56
	PUSH	320
	PUSH	DWORD [-1164+EBP]
	CALL	_sheet_slide
	PUSH	116
	PUSH	8
	PUSH	DWORD [-1160+EBP]
	CALL	_sheet_slide
	PUSH	116
	PUSH	168
	PUSH	DWORD [-1156+EBP]
	CALL	_sheet_slide
	ADD	ESP,36
	PUSH	DWORD [-1664+EBP]
	PUSH	DWORD [-1668+EBP]
	PUSH	DWORD [-1680+EBP]
	CALL	_sheet_slide
	PUSH	72
	PUSH	80
	PUSH	EDI
	CALL	_sheet_slide
	PUSH	0
	PUSH	DWORD [-1676+EBP]
	CALL	_sheet_updown
	ADD	ESP,32
	PUSH	1
	PUSH	DWORD [-1164+EBP]
	CALL	_sheet_updown
	PUSH	2
	PUSH	DWORD [-1160+EBP]
	CALL	_sheet_updown
	PUSH	3
	PUSH	DWORD [-1156+EBP]
	CALL	_sheet_updown
	PUSH	4
	PUSH	EDI
	CALL	_sheet_updown
	ADD	ESP,32
	PUSH	5
	PUSH	DWORD [-1680+EBP]
	CALL	_sheet_updown
	PUSH	3932160
	CALL	_memman_total
	LEA	ECX,DWORD [-76+EBP]
	SHR	EAX,10
	MOV	DWORD [ESP],EAX
	MOV	EAX,DWORD [3932160]
	SHR	EAX,20
	PUSH	EAX
	PUSH	LC2
	PUSH	ECX
	CALL	_sprintf
	LEA	EAX,DWORD [-76+EBP]
	PUSH	EAX
	PUSH	7
	PUSH	48
	PUSH	0
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-1684+EBP]
	CALL	_putstr8_asc
	ADD	ESP,48
	PUSH	64
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	0
	PUSH	0
	PUSH	DWORD [-1676+EBP]
L26:
	CALL	_sheet_refresh
	ADD	ESP,20
L23:
	LEA	EBX,DWORD [-124+EBP]
	CALL	_io_cli
	PUSH	EBX
	CALL	_fifo32_status
	POP	ESI
	TEST	EAX,EAX
	JE	L28
	PUSH	EBX
	CALL	_fifo32_get
	MOV	ESI,EAX
	CALL	_io_sti
	POP	EDX
	LEA	EAX,DWORD [-256+ESI]
	CMP	EAX,255
	JBE	L29
	LEA	EAX,DWORD [-512+ESI]
	CMP	EAX,255
	JBE	L30
	TEST	ESI,ESI
	JE	L21
	PUSH	0
	PUSH	EBX
	PUSH	DWORD [-1688+EBP]
	CALL	_timer_init
	MOV	DWORD [-1696+EBP],0
L27:
	ADD	ESP,12
	PUSH	50
	PUSH	DWORD [-1688+EBP]
	CALL	_timer_settime
	MOV	EBX,DWORD [-1692+EBP]
	PUSH	44
	ADD	EBX,8
	PUSH	EBX
	PUSH	28
	PUSH	DWORD [-1692+EBP]
	PUSH	DWORD [-1696+EBP]
	PUSH	DWORD [4+EDI]
	PUSH	DWORD [EDI]
	CALL	_boxfill8
	ADD	ESP,36
	PUSH	44
	PUSH	EBX
	PUSH	28
	PUSH	DWORD [-1692+EBP]
	PUSH	EDI
	JMP	L26
L21:
	PUSH	1
	PUSH	EBX
	PUSH	DWORD [-1688+EBP]
	CALL	_timer_init
	MOV	DWORD [-1696+EBP],7
	JMP	L27
L30:
	MOV	EDX,ESI
	MOVZX	EAX,DL
	PUSH	EAX
	LEA	EAX,DWORD [-92+EBP]
	PUSH	EAX
	CALL	_mouse_decode
	POP	EDX
	POP	ECX
	DEC	EAX
	JNE	L23
	MOV	EAX,DWORD [-88+EBP]
	LEA	ECX,DWORD [-1668+EBP]
	ADD	DWORD [-1668+EBP],EAX
	MOV	EAX,DWORD [-84+EBP]
	ADD	DWORD [-1664+EBP],EAX
	MOVSX	EAX,WORD [4086]
	PUSH	EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	ECX
	CALL	_MouseCoodinateThreshold
	PUSH	DWORD [-1664+EBP]
	PUSH	DWORD [-1668+EBP]
	PUSH	DWORD [-1680+EBP]
	CALL	_sheet_slide
	ADD	ESP,24
	TEST	DWORD [-80+EBP],1
	JE	L23
	MOV	EAX,DWORD [-1664+EBP]
	SUB	EAX,8
	PUSH	EAX
	MOV	EAX,DWORD [-1668+EBP]
	SUB	EAX,80
	PUSH	EAX
	PUSH	EDI
	CALL	_sheet_slide
	ADD	ESP,12
	JMP	L23
L29:
	PUSH	EAX
	LEA	EBX,DWORD [-76+EBP]
	PUSH	LC3
	PUSH	EBX
	CALL	_sprintf
	PUSH	3
	PUSH	EBX
	PUSH	3
	PUSH	7
	PUSH	16
	PUSH	0
	PUSH	DWORD [-1676+EBP]
	CALL	_putfont8_sht
	ADD	ESP,40
	CMP	ESI,339
	JG	L13
	MOV	AL,BYTE [_keytable.0-256+ESI]
	TEST	AL,AL
	JE	L13
	CMP	DWORD [-1700+EBP],17
	JGE	L13
	PUSH	1
	MOV	BYTE [-76+EBP],AL
	PUSH	EBX
	PUSH	7
	PUSH	0
	PUSH	28
	PUSH	DWORD [-1692+EBP]
	PUSH	EDI
	MOV	BYTE [-75+EBP],0
	CALL	_putfont8_sht
	ADD	ESP,28
	ADD	DWORD [-1692+EBP],8
	INC	DWORD [-1700+EBP]
L13:
	CMP	ESI,270
	JE	L31
L15:
	MOV	EBX,DWORD [-1692+EBP]
	PUSH	44
	ADD	EBX,8
	PUSH	EBX
	PUSH	28
	PUSH	DWORD [-1692+EBP]
	PUSH	DWORD [-1696+EBP]
	PUSH	DWORD [4+EDI]
	PUSH	DWORD [EDI]
	CALL	_boxfill8
	PUSH	44
	PUSH	EBX
	PUSH	28
	PUSH	DWORD [-1692+EBP]
	PUSH	EDI
	CALL	_sheet_refresh
	ADD	ESP,48
	JMP	L23
L31:
	CMP	DWORD [-1692+EBP],8
	JLE	L15
	PUSH	1
	PUSH	LC4
	PUSH	7
	PUSH	0
	PUSH	28
	PUSH	DWORD [-1692+EBP]
	PUSH	EDI
	CALL	_putfont8_sht
	ADD	ESP,28
	SUB	DWORD [-1692+EBP],8
	DEC	DWORD [-1700+EBP]
	JMP	L15
L28:
	PUSH	DWORD [-1704+EBP]
	CALL	_task_sleep
	CALL	_io_sti
	POP	ECX
	JMP	L23
	GLOBAL	_memoryUsage
_memoryUsage:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	-1073741825
	PUSH	4194304
	CALL	_memtest
	LEAVE
	RET
	GLOBAL	_memoryInit
_memoryInit:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EBX
	MOV	EBX,DWORD [12+EBP]
	MOV	ESI,DWORD [8+EBP]
	PUSH	EBX
	SUB	EBX,4194304
	PUSH	ESI
	CALL	_memman_init
	PUSH	647168
	PUSH	4096
	PUSH	ESI
	CALL	_memman_free
	PUSH	EBX
	PUSH	4194304
	PUSH	ESI
	CALL	_memman_free
	LEA	ESP,DWORD [-8+EBP]
	POP	EBX
	POP	ESI
	POP	EBP
	RET
	GLOBAL	_hardWareInit
_hardWareInit:
	PUSH	EBP
	MOV	EBP,ESP
	CALL	_init_gdtidt
	CALL	_init_pic
	CALL	_io_sti
	POP	EBP
	JMP	_init_pit
	GLOBAL	_MouseCoodinateThreshold
_MouseCoodinateThreshold:
	PUSH	EBP
	MOV	EBP,ESP
	MOV	EAX,DWORD [8+EBP]
	CMP	DWORD [EAX],0
	JS	L40
L36:
	CMP	DWORD [4+EAX],0
	JS	L41
L37:
	MOV	EDX,DWORD [12+EBP]
	DEC	EDX
	CMP	DWORD [EAX],EDX
	JBE	L38
	MOV	DWORD [EAX],EDX
L38:
	MOV	EDX,DWORD [16+EBP]
	DEC	EDX
	CMP	DWORD [4+EAX],EDX
	JBE	L35
	MOV	DWORD [4+EAX],EDX
L35:
	POP	EBP
	RET
L41:
	MOV	DWORD [4+EAX],0
	JMP	L37
L40:
	MOV	DWORD [EAX],0
	JMP	L36
	GLOBAL	_makeTextbox8
_makeTextbox8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,20
	MOV	EAX,DWORD [12+EBP]
	MOV	ESI,DWORD [16+EBP]
	ADD	EAX,DWORD [20+EBP]
	SUB	ESI,3
	PUSH	ESI
	MOV	DWORD [-16+EBP],EAX
	MOV	EAX,DWORD [16+EBP]
	ADD	EAX,DWORD [24+EBP]
	MOV	DWORD [-20+EBP],EAX
	MOV	EAX,DWORD [-16+EBP]
	INC	EAX
	PUSH	EAX
	MOV	DWORD [-24+EBP],EAX
	MOV	EAX,DWORD [12+EBP]
	PUSH	ESI
	SUB	EAX,2
	PUSH	EAX
	MOV	DWORD [-28+EBP],EAX
	MOV	EAX,DWORD [8+EBP]
	PUSH	15
	PUSH	DWORD [4+EAX]
	PUSH	DWORD [EAX]
	CALL	_boxfill8
	MOV	EDI,DWORD [12+EBP]
	MOV	EAX,DWORD [-20+EBP]
	SUB	EDI,3
	INC	EAX
	PUSH	EAX
	MOV	DWORD [-32+EBP],EAX
	PUSH	EDI
	MOV	EAX,DWORD [8+EBP]
	PUSH	ESI
	PUSH	EDI
	PUSH	15
	PUSH	DWORD [4+EAX]
	PUSH	DWORD [EAX]
	CALL	_boxfill8
	MOV	EAX,DWORD [8+EBP]
	ADD	ESP,56
	MOV	EBX,DWORD [-20+EBP]
	ADD	EBX,2
	PUSH	EBX
	PUSH	DWORD [-24+EBP]
	PUSH	EBX
	PUSH	EDI
	PUSH	7
	PUSH	DWORD [4+EAX]
	PUSH	DWORD [EAX]
	CALL	_boxfill8
	MOV	EAX,DWORD [-16+EBP]
	PUSH	EBX
	ADD	EAX,2
	PUSH	EAX
	PUSH	ESI
	PUSH	EAX
	MOV	EAX,DWORD [8+EBP]
	PUSH	7
	PUSH	DWORD [4+EAX]
	PUSH	DWORD [EAX]
	CALL	_boxfill8
	MOV	EAX,DWORD [8+EBP]
	ADD	ESP,56
	MOV	EBX,DWORD [16+EBP]
	SUB	EBX,2
	MOV	EDI,DWORD [12+EBP]
	PUSH	EBX
	DEC	EDI
	PUSH	DWORD [-16+EBP]
	PUSH	EBX
	PUSH	EDI
	PUSH	0
	PUSH	DWORD [4+EAX]
	PUSH	DWORD [EAX]
	CALL	_boxfill8
	MOV	EAX,DWORD [8+EBP]
	PUSH	DWORD [-20+EBP]
	PUSH	DWORD [-28+EBP]
	PUSH	EBX
	PUSH	DWORD [-28+EBP]
	PUSH	0
	PUSH	DWORD [4+EAX]
	PUSH	DWORD [EAX]
	CALL	_boxfill8
	MOV	EAX,DWORD [8+EBP]
	ADD	ESP,56
	PUSH	DWORD [-32+EBP]
	PUSH	DWORD [-16+EBP]
	PUSH	DWORD [-32+EBP]
	PUSH	DWORD [-28+EBP]
	PUSH	8
	PUSH	DWORD [4+EAX]
	PUSH	DWORD [EAX]
	CALL	_boxfill8
	MOV	EAX,DWORD [8+EBP]
	PUSH	DWORD [-32+EBP]
	PUSH	DWORD [-24+EBP]
	PUSH	EBX
	PUSH	DWORD [-24+EBP]
	PUSH	8
	PUSH	DWORD [4+EAX]
	PUSH	DWORD [EAX]
	CALL	_boxfill8
	MOV	EAX,DWORD [16+EBP]
	ADD	ESP,56
	DEC	EAX
	PUSH	DWORD [-20+EBP]
	PUSH	DWORD [-16+EBP]
	PUSH	EAX
	PUSH	EDI
	MOVZX	EAX,BYTE [28+EBP]
	PUSH	EAX
	MOV	EAX,DWORD [8+EBP]
	PUSH	DWORD [4+EAX]
	PUSH	DWORD [EAX]
	CALL	_boxfill8
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
[SECTION .data]
_closebtn.1:
	DB	"OOOOOOOOOOOOOOO@"
	DB	"OQQQQQQQQQQQQQ$@"
	DB	"OQQQQQQQQQQQQQ$@"
	DB	"OQQQ@@QQQQ@@QQ$@"
	DB	"OQQQQ@@QQ@@QQQ$@"
	DB	"OQQQQQ@@@@QQQQ$@"
	DB	"OQQQQQQ@@QQQQQ$@"
	DB	"OQQQQQ@@@@QQQQ$@"
	DB	"OQQQQ@@QQ@@QQQ$@"
	DB	"OQQQ@@QQQQ@@QQ$@"
	DB	"OQQQQQQQQQQQQQ$@"
	DB	"OQQQQQQQQQQQQQ$@"
	DB	"O$$$$$$$$$$$$$$@"
	DB	"@@@@@@@@@@@@@@@@"
[SECTION .text]
	GLOBAL	_makeWindow8
_makeWindow8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	EDI
	PUSH	EDI
	CMP	DWORD [24+EBP],0
	JE	L44
	MOV	BYTE [-13+EBP],0
	MOV	BYTE [-14+EBP],7
L45:
	MOV	EAX,DWORD [12+EBP]
	PUSH	0
	DEC	EAX
	PUSH	EAX
	MOV	DWORD [-20+EBP],EAX
	PUSH	0
	PUSH	0
	PUSH	8
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	ESI,DWORD [12+EBP]
	PUSH	1
	SUB	ESI,2
	PUSH	ESI
	PUSH	1
	PUSH	1
	PUSH	7
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EDI,DWORD [16+EBP]
	ADD	ESP,56
	DEC	EDI
	PUSH	EDI
	PUSH	0
	PUSH	0
	PUSH	0
	PUSH	8
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EBX,DWORD [16+EBP]
	SUB	EBX,2
	PUSH	EBX
	PUSH	1
	PUSH	1
	PUSH	1
	PUSH	7
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	ADD	ESP,56
	PUSH	EBX
	PUSH	ESI
	PUSH	1
	PUSH	ESI
	PUSH	15
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	PUSH	EDI
	PUSH	DWORD [-20+EBP]
	PUSH	0
	PUSH	DWORD [-20+EBP]
	PUSH	1
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [16+EBP]
	ADD	ESP,56
	SUB	EAX,3
	PUSH	EAX
	MOV	EAX,DWORD [12+EBP]
	SUB	EAX,3
	PUSH	EAX
	PUSH	2
	PUSH	2
	PUSH	8
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [12+EBP]
	PUSH	20
	SUB	EAX,4
	PUSH	EAX
	PUSH	3
	PUSH	3
	MOVZX	EAX,BYTE [-14+EBP]
	PUSH	EAX
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	ADD	ESP,56
	PUSH	EBX
	PUSH	ESI
	XOR	ESI,ESI
	PUSH	EBX
	PUSH	1
	PUSH	15
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	PUSH	EDI
	PUSH	DWORD [-20+EBP]
	PUSH	EDI
	XOR	EDI,EDI
	PUSH	0
	PUSH	7
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	ADD	ESP,56
	PUSH	DWORD [20+EBP]
	MOVSX	EAX,BYTE [-13+EBP]
	PUSH	EAX
	PUSH	4
	PUSH	24
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_putstr8_asc
	ADD	ESP,24
	IMUL	ECX,DWORD [12+EBP],5
L61:
	MOV	EDX,DWORD [12+EBP]
	MOV	EAX,DWORD [8+EBP]
	ADD	EDX,ECX
	XOR	EBX,EBX
	LEA	EDX,DWORD [-21+EAX+EDX*1]
L60:
	MOV	AL,BYTE [_closebtn.1+EBX+ESI*1]
	CMP	AL,64
	JE	L58
	CMP	AL,36
	JE	L66
	CMP	AL,81
	JE	L67
L58:
	MOV	AL,7
L55:
	INC	EBX
	MOV	BYTE [EDX],AL
	INC	EDX
	CMP	EBX,15
	JLE	L60
	INC	EDI
	ADD	ESI,16
	ADD	ECX,DWORD [12+EBP]
	CMP	EDI,13
	JLE	L61
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L67:
	MOV	AL,1
	JMP	L55
L66:
	MOV	AL,15
	JMP	L55
L44:
	MOV	BYTE [-13+EBP],7
	MOV	BYTE [-14+EBP],0
	JMP	L45
	GLOBAL	_putfont8_sht
_putfont8_sht:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,16
	MOV	EAX,DWORD [12+EBP]
	MOV	EDI,DWORD [16+EBP]
	MOV	DWORD [-16+EBP],EAX
	MOV	ESI,DWORD [8+EBP]
	MOV	EAX,DWORD [20+EBP]
	MOV	DWORD [-20+EBP],EAX
	MOV	EAX,DWORD [28+EBP]
	MOV	DWORD [-24+EBP],EAX
	LEA	EAX,DWORD [16+EDI]
	MOV	DWORD [-28+EBP],EAX
	PUSH	EAX
	MOV	EAX,DWORD [-16+EBP]
	MOV	EBX,DWORD [32+EBP]
	LEA	EBX,DWORD [EAX+EBX*8]
	PUSH	EBX
	PUSH	EDI
	PUSH	EAX
	MOVZX	EAX,BYTE [24+EBP]
	PUSH	EAX
	PUSH	DWORD [4+ESI]
	PUSH	DWORD [ESI]
	CALL	_boxfill8
	PUSH	DWORD [-24+EBP]
	PUSH	DWORD [-20+EBP]
	PUSH	EDI
	PUSH	DWORD [-16+EBP]
	PUSH	DWORD [4+ESI]
	PUSH	DWORD [ESI]
	CALL	_putstr8_asc
	MOV	DWORD [8+EBP],ESI
	MOV	EAX,DWORD [-28+EBP]
	MOV	DWORD [20+EBP],EBX
	MOV	DWORD [24+EBP],EAX
	MOV	DWORD [16+EBP],EDI
	MOV	EAX,DWORD [-16+EBP]
	ADD	ESP,52
	MOV	DWORD [12+EBP],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_sheet_refresh
[SECTION .data]
LC5:
	DB	"%10d",0x00
[SECTION .text]
	GLOBAL	_task_b_main
_task_b_main:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	EDI,EDI
	PUSH	EBX
	LEA	EAX,DWORD [-556+EBP]
	SUB	ESP,564
	LEA	EBX,DWORD [-44+EBP]
	MOV	DWORD [-576+EBP],0
	PUSH	0
	PUSH	EAX
	PUSH	128
	PUSH	EBX
	CALL	_fifo32_init
	CALL	_timer_alloc
	PUSH	100
	PUSH	EBX
	MOV	ESI,EAX
	PUSH	EAX
	CALL	_timer_init
	PUSH	100
	PUSH	ESI
	CALL	_timer_settime
	ADD	ESP,36
L76:
	LEA	EBX,DWORD [-44+EBP]
	CALL	_io_cli
	PUSH	EBX
	INC	EDI
	CALL	_fifo32_status
	POP	EDX
	TEST	EAX,EAX
	JE	L77
	PUSH	EBX
	CALL	_fifo32_get
	MOV	EBX,EAX
	CALL	_io_sti
	POP	ECX
	CMP	EBX,100
	JNE	L76
	MOV	EAX,EDI
	LEA	EBX,DWORD [-572+EBP]
	SUB	EAX,DWORD [-576+EBP]
	PUSH	EAX
	PUSH	LC5
	PUSH	EBX
	CALL	_sprintf
	PUSH	11
	PUSH	EBX
	PUSH	8
	PUSH	0
	PUSH	28
	PUSH	24
	PUSH	DWORD [8+EBP]
	CALL	_putfont8_sht
	ADD	ESP,40
	MOV	DWORD [-576+EBP],EDI
	PUSH	100
	PUSH	ESI
	CALL	_timer_settime
	POP	EAX
	POP	EDX
	JMP	L76
L77:
	CALL	_io_sti
	JMP	L76
