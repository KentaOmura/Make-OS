	.file	"bootpack.c"
	.data
LC1:
	.ascii "%2d %2d %2d\0"
LC0:
	.ascii "%02X\0"
	.text
	.balign 2
.globl _HariMain
	.def	_HariMain;	.scl	2;	.type	32;	.endef
_HariMain:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	movl	$2, %esi
	pushl	%ebx
	leal	-108(%ebp), %ebx
	subl	$100, %esp
	call	_init_gdtidt
	call	_init_pic
	call	_ini_keybuf
	call	_io_sti
	pushl	$249
	pushl	$33
	call	_io_out8
	pushl	$239
	pushl	$161
	call	_io_out8
	call	_init_keyboard
	call	_init_palette
	movswl	4086,%eax
	decl	%eax
	pushl	%eax
	movswl	4084,%eax
	decl	%eax
	pushl	%eax
	pushl	$0
	pushl	$0
	pushl	$3
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_boxfill8
	addl	$44, %esp
	pushl	$3
	pushl	%ebx
	call	_init_mouse_cursol
	movl	4084, %eax
	cwtd
	idivw	%si
	movswl	%ax,%edi
	movw	4086, %ax
	pushl	%ebx
	cwtd
	idivw	%si
	movswl	%ax,%esi
	pushl	%esi
	pushl	%edi
	pushl	$8
	pushl	$8
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putblock8_8
	leal	-28(%ebp), %eax
	addl	$36, %esp
	pushl	%eax
	call	_enable_mouse
	popl	%ebx
L15:
	call	_io_cli
	call	_keybord_data_num
	movl	%eax, %ebx
	call	_mouse_data_num
	leal	(%eax,%ebx), %eax
	testl	%eax, %eax
	je	L16
	call	_keybord_data_num
	testl	%eax, %eax
	jne	L17
	call	_mouse_data_num
	testl	%eax, %eax
	je	L15
	call	_get_mouse_data
	movb	%al, %bl
	call	_io_sti
	movzbl	%bl, %eax
	pushl	%eax
	leal	-28(%ebp), %eax
	pushl	%eax
	call	_mouse_decode
	popl	%edx
	popl	%ecx
	decl	%eax
	jne	L15
	leal	8(%esi), %eax
	pushl	%eax
	leal	8(%edi), %eax
	pushl	%eax
	pushl	%esi
	pushl	%edi
	pushl	$3
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_boxfill8
	addl	$28, %esp
	movl	-24(%ebp), %edx
	movl	-20(%ebp), %ecx
	addl	%ecx, %esi
	addl	%edx, %edi
	js	L18
L11:
	testl	%esi, %esi
	js	L19
L12:
	movswl	4084,%eax
	subl	$8, %eax
	cmpl	%eax, %edi
	jle	L13
	movl	%eax, %edi
L13:
	movswl	4086,%eax
	subl	$8, %eax
	cmpl	%eax, %esi
	jle	L14
	movl	%eax, %esi
L14:
	pushl	%ecx
	leal	-44(%ebp), %ebx
	pushl	%edx
	pushl	-16(%ebp)
	pushl	$LC1
	pushl	%ebx
	call	_sprintf
	pushl	$47
	movswl	4084,%eax
	decl	%eax
	pushl	%eax
	pushl	$32
	pushl	$0
	pushl	$3
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_boxfill8
	addl	$48, %esp
	pushl	%ebx
	pushl	$7
	pushl	$32
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putstr8_asc
	leal	-108(%ebp), %eax
	pushl	%eax
	pushl	%esi
	pushl	%edi
	pushl	$8
	pushl	$8
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putblock8_8
	addl	$52, %esp
	jmp	L15
L19:
	xorl	%esi, %esi
	jmp	L12
L18:
	xorl	%edi, %edi
	jmp	L11
L17:
	call	_get_keybord_data
	movb	%al, %bl
	call	_io_sti
	movzbl	%bl, %eax
	pushl	%eax
	leal	-44(%ebp), %ebx
	pushl	$LC0
	pushl	%ebx
	call	_sprintf
	pushl	$31
	movswl	4084,%eax
	decl	%eax
	pushl	%eax
	pushl	$16
	pushl	$0
	pushl	$3
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_boxfill8
	addl	$40, %esp
	pushl	%ebx
	pushl	$7
	pushl	$16
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putstr8_asc
	addl	$24, %esp
	jmp	L15
L16:
	call	_io_stihlt
	jmp	L15
	.balign 2
.globl _mouse_decode
	.def	_mouse_decode;	.scl	2;	.type	32;	.endef
_mouse_decode:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%edi, %edi
	movl	8(%ebp), %edx
	pushl	%ebx
	movl	12(%ebp), %ecx
	movzbl	3(%edx), %eax
	movl	%ecx, %esi
	cmpl	$1, %eax
	je	L24
	cmpl	$1, %eax
	jle	L32
	cmpl	$2, %eax
	je	L25
	cmpl	$3, %eax
	je	L26
L29:
	orl	$-1, %edi
L21:
	popl	%ebx
	movl	%edi, %eax
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L26:
	movb	(%edx), %bl
	andl	$255, %esi
	movl	%ebx, %eax
	movb	%cl, 2(%edx)
	andl	$7, %eax
	movl	$1, %edi
	movl	%eax, 12(%edx)
	movl	%esi, 8(%edx)
	movb	%bl, %al
	movzbl	1(%edx), %ecx
	andl	$16, %eax
	movl	%ecx, 4(%edx)
	movb	$1, 3(%edx)
	testb	%al, %al
	je	L27
	orl	$-256, %ecx
	movl	%ecx, 4(%edx)
L27:
	andl	$32, %ebx
	testb	%bl, %bl
	je	L28
	orl	$-256, 8(%edx)
L28:
	negl	8(%edx)
	jmp	L21
L25:
	movb	%cl, 1(%edx)
	movb	$3, 3(%edx)
	jmp	L21
L32:
	testl	%eax, %eax
	jne	L29
	cmpb	$-6, %cl
	jne	L21
	movb	$1, 3(%edx)
	jmp	L21
L24:
	movb	%cl, (%edx)
	movb	$2, 3(%edx)
	jmp	L21
	.balign 2
.globl _wait_KBC_sendready
	.def	_wait_KBC_sendready;	.scl	2;	.type	32;	.endef
_wait_KBC_sendready:
	pushl	%ebp
	movl	%esp, %ebp
L38:
	pushl	$100
	call	_io_in8
	popl	%edx
	andl	$2, %eax
	jne	L38
	leave
	ret
	.balign 2
.globl _init_keyboard
	.def	_init_keyboard;	.scl	2;	.type	32;	.endef
_init_keyboard:
	pushl	%ebp
	movl	%esp, %ebp
	call	_wait_KBC_sendready
	pushl	$96
	pushl	$100
	call	_io_out8
	call	_wait_KBC_sendready
	pushl	$71
	pushl	$96
	call	_io_out8
	leave
	ret
	.balign 2
.globl _enable_mouse
	.def	_enable_mouse;	.scl	2;	.type	32;	.endef
_enable_mouse:
	pushl	%ebp
	movl	%esp, %ebp
	call	_wait_KBC_sendready
	pushl	$212
	pushl	$100
	call	_io_out8
	call	_wait_KBC_sendready
	pushl	$244
	pushl	$96
	call	_io_out8
	movl	8(%ebp), %eax
	movb	$0, 3(%eax)
	leave
	ret
	.def	_io_in8;	.scl	2;	.type	32;	.endef
	.def	_mouse_decode;	.scl	2;	.type	32;	.endef
	.def	_get_mouse_data;	.scl	2;	.type	32;	.endef
	.def	_putstr8_asc;	.scl	2;	.type	32;	.endef
	.def	_sprintf;	.scl	2;	.type	32;	.endef
	.def	_get_keybord_data;	.scl	2;	.type	32;	.endef
	.def	_io_stihlt;	.scl	2;	.type	32;	.endef
	.def	_mouse_data_num;	.scl	2;	.type	32;	.endef
	.def	_keybord_data_num;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_enable_mouse;	.scl	2;	.type	32;	.endef
	.def	_putblock8_8;	.scl	2;	.type	32;	.endef
	.def	_init_mouse_cursol;	.scl	2;	.type	32;	.endef
	.def	_boxfill8;	.scl	2;	.type	32;	.endef
	.def	_init_palette;	.scl	2;	.type	32;	.endef
	.def	_init_keyboard;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_io_sti;	.scl	2;	.type	32;	.endef
	.def	_ini_keybuf;	.scl	2;	.type	32;	.endef
	.def	_init_pic;	.scl	2;	.type	32;	.endef
	.def	_init_gdtidt;	.scl	2;	.type	32;	.endef
