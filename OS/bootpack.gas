	.file	"bootpack.c"
	.data
_keytable.0:
	.byte	0
	.byte	0
	.byte	49
	.byte	50
	.byte	51
	.byte	52
	.byte	53
	.byte	54
	.byte	55
	.byte	56
	.byte	57
	.byte	48
	.byte	45
	.byte	94
	.byte	0
	.byte	0
	.byte	81
	.byte	87
	.byte	69
	.byte	82
	.byte	84
	.byte	89
	.byte	85
	.byte	73
	.byte	79
	.byte	80
	.byte	64
	.byte	91
	.byte	0
	.byte	0
	.byte	65
	.byte	83
	.byte	68
	.byte	70
	.byte	71
	.byte	72
	.byte	74
	.byte	75
	.byte	76
	.byte	59
	.byte	58
	.byte	0
	.byte	0
	.byte	93
	.byte	90
	.byte	88
	.byte	67
	.byte	86
	.byte	66
	.byte	78
	.byte	77
	.byte	44
	.byte	46
	.byte	47
	.byte	0
	.byte	42
	.byte	0
	.byte	32
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	55
	.byte	56
	.byte	57
	.byte	45
	.byte	52
	.byte	53
	.byte	54
	.byte	43
	.byte	49
	.byte	50
	.byte	51
	.byte	48
	.byte	46
LC0:
	.ascii "task_b%d\0"
LC1:
	.ascii "task_a\0"
LC2:
	.ascii "memory %dMB  free : %dKB\0"
LC3:
	.ascii "%02X\0"
LC4:
	.ascii " \0"
	.text
	.balign 2
.globl _HariMain
	.def	_HariMain;	.scl	2;	.type	32;	.endef
_HariMain:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%esi, %esi
	pushl	%ebx
	leal	-124(%ebp), %ebx
	subl	$1700, %esp
	movl	$0, -1700(%ebp)
	call	_hardWareInit
	leal	-1148(%ebp), %eax
	pushl	$0
	pushl	%eax
	pushl	$256
	pushl	%ebx
	call	_fifo32_init
	pushl	$256
	pushl	%ebx
	call	_init_keyboard
	leal	-92(%ebp), %eax
	pushl	%eax
	pushl	$512
	pushl	%ebx
	call	_enable_mouse
	addl	$36, %esp
	pushl	$248
	pushl	$33
	call	_io_out8
	pushl	$239
	pushl	$161
	call	_io_out8
	pushl	$3932160
	call	_memoryUsage
	movl	%eax, (%esp)
	pushl	$3932160
	call	_memoryInit
	call	_init_palette
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	pushl	$3932160
	call	_shtctl_init
	addl	$40, %esp
	pushl	$3932160
	movl	%eax, -1672(%ebp)
	call	_task_init
	pushl	-1672(%ebp)
	movl	%eax, -1704(%ebp)
	movl	%eax, -100(%ebp)
	call	_sheet_alloc
	movswl	4086,%edx
	movl	%eax, -1676(%ebp)
	movswl	4084,%eax
	imull	%edx, %eax
	pushl	%eax
	pushl	$3932160
	call	_memman_alloc_4k
	pushl	$-1
	movl	%eax, -1684(%ebp)
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	-1684(%ebp)
	pushl	-1676(%ebp)
	call	_sheet_setbuf
	addl	$36, %esp
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	$0
	pushl	$0
	pushl	$3
	movswl	4084,%eax
	pushl	%eax
	pushl	-1684(%ebp)
	call	_boxfill8
	addl	$28, %esp
L6:
	pushl	-1672(%ebp)
	call	_sheet_alloc
	pushl	$7488
	pushl	$3932160
	movl	%eax, -1164(%ebp,%esi,4)
	call	_memman_alloc_4k
	pushl	$-1
	movl	%eax, %ebx
	pushl	$52
	pushl	$144
	pushl	%eax
	pushl	-1164(%ebp,%esi,4)
	call	_sheet_setbuf
	leal	-76(%ebp), %ecx
	addl	$32, %esp
	pushl	%esi
	pushl	$LC0
	pushl	%ecx
	call	_sprintf
	leal	-76(%ebp), %eax
	pushl	$0
	pushl	%eax
	pushl	$52
	pushl	$144
	pushl	%ebx
	call	_makeWindow8
	addl	$32, %esp
	call	_task_alloc
	pushl	$65536
	movl	%eax, %ebx
	pushl	$3932160
	movl	%eax, -1660(%ebp,%esi,4)
	call	_memman_alloc_4k
	movl	-1164(%ebp,%esi,4), %edx
	addl	$65528, %eax
	movl	%eax, 64(%ebx)
	movl	-1660(%ebp,%esi,4), %eax
	incl	%esi
	movl	64(%eax), %ecx
	movl	$_task_b_main, 40(%eax)
	movl	$8, 80(%eax)
	movl	$16, 84(%eax)
	movl	$8, 88(%eax)
	movl	$8, 92(%eax)
	movl	$8, 96(%eax)
	movl	$8, 100(%eax)
	movl	%edx, 4(%ecx)
	pushl	%eax
	call	_task_run
	addl	$12, %esp
	cmpl	$2, %esi
	jle	L6
	pushl	-1672(%ebp)
	call	_sheet_alloc
	pushl	$10880
	pushl	$3932160
	movl	%eax, %edi
	call	_memman_alloc_4k
	pushl	$88
	pushl	$68
	movl	%eax, %ebx
	pushl	$160
	pushl	%eax
	pushl	%edi
	call	_sheet_setbuf
	addl	$32, %esp
	pushl	$1
	pushl	$LC1
	pushl	$68
	pushl	$160
	pushl	%ebx
	leal	-1420(%ebp), %ebx
	call	_makeWindow8
	pushl	$7
	pushl	$16
	pushl	$144
	pushl	$28
	pushl	$8
	pushl	%edi
	call	_makeTextbox8
	addl	$44, %esp
	pushl	-1672(%ebp)
	call	_sheet_alloc
	pushl	$3
	pushl	$8
	pushl	$8
	movl	%eax, -1680(%ebp)
	pushl	%ebx
	pushl	%eax
	call	_sheet_setbuf
	pushl	$3
	pushl	%ebx
	call	_init_mouse_cursol
	addl	$32, %esp
	movl	$8, -1692(%ebp)
	movl	$7, -1696(%ebp)
	call	_timer_alloc
	pushl	$1
	movl	%eax, -1688(%ebp)
	leal	-124(%ebp), %eax
	pushl	%eax
	pushl	-1688(%ebp)
	call	_timer_init
	pushl	$50
	pushl	-1688(%ebp)
	call	_timer_settime
	movl	$2, %ecx
	movswl	4084,%eax
	subl	$8, %eax
	cltd
	idivl	%ecx
	movl	%eax, -1668(%ebp)
	movswl	4086,%eax
	subl	$36, %eax
	pushl	$0
	cltd
	idivl	%ecx
	pushl	$0
	movl	%eax, -1664(%ebp)
	pushl	-1676(%ebp)
	call	_sheet_slide
	addl	$32, %esp
	pushl	$56
	pushl	$320
	pushl	-1164(%ebp)
	call	_sheet_slide
	pushl	$116
	pushl	$8
	pushl	-1160(%ebp)
	call	_sheet_slide
	pushl	$116
	pushl	$168
	pushl	-1156(%ebp)
	call	_sheet_slide
	addl	$36, %esp
	pushl	-1664(%ebp)
	pushl	-1668(%ebp)
	pushl	-1680(%ebp)
	call	_sheet_slide
	pushl	$72
	pushl	$80
	pushl	%edi
	call	_sheet_slide
	pushl	$0
	pushl	-1676(%ebp)
	call	_sheet_updown
	addl	$32, %esp
	pushl	$1
	pushl	-1164(%ebp)
	call	_sheet_updown
	pushl	$2
	pushl	-1160(%ebp)
	call	_sheet_updown
	pushl	$3
	pushl	-1156(%ebp)
	call	_sheet_updown
	pushl	$4
	pushl	%edi
	call	_sheet_updown
	addl	$32, %esp
	pushl	$5
	pushl	-1680(%ebp)
	call	_sheet_updown
	pushl	$3932160
	call	_memman_total
	leal	-76(%ebp), %ecx
	shrl	$10, %eax
	movl	%eax, (%esp)
	movl	3932160, %eax
	shrl	$20, %eax
	pushl	%eax
	pushl	$LC2
	pushl	%ecx
	call	_sprintf
	leal	-76(%ebp), %eax
	pushl	%eax
	pushl	$7
	pushl	$48
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	-1684(%ebp)
	call	_putstr8_asc
	addl	$48, %esp
	pushl	$64
	movswl	4084,%eax
	pushl	%eax
	pushl	$0
	pushl	$0
	pushl	-1676(%ebp)
L26:
	call	_sheet_refresh
	addl	$20, %esp
L23:
	leal	-124(%ebp), %ebx
	call	_io_cli
	pushl	%ebx
	call	_fifo32_status
	popl	%esi
	testl	%eax, %eax
	je	L28
	pushl	%ebx
	call	_fifo32_get
	movl	%eax, %esi
	call	_io_sti
	popl	%edx
	leal	-256(%esi), %eax
	cmpl	$255, %eax
	jbe	L29
	leal	-512(%esi), %eax
	cmpl	$255, %eax
	jbe	L30
	testl	%esi, %esi
	je	L21
	pushl	$0
	pushl	%ebx
	pushl	-1688(%ebp)
	call	_timer_init
	movl	$0, -1696(%ebp)
L27:
	addl	$12, %esp
	pushl	$50
	pushl	-1688(%ebp)
	call	_timer_settime
	movl	-1692(%ebp), %ebx
	pushl	$44
	addl	$8, %ebx
	pushl	%ebx
	pushl	$28
	pushl	-1692(%ebp)
	pushl	-1696(%ebp)
	pushl	4(%edi)
	pushl	(%edi)
	call	_boxfill8
	addl	$36, %esp
	pushl	$44
	pushl	%ebx
	pushl	$28
	pushl	-1692(%ebp)
	pushl	%edi
	jmp	L26
L21:
	pushl	$1
	pushl	%ebx
	pushl	-1688(%ebp)
	call	_timer_init
	movl	$7, -1696(%ebp)
	jmp	L27
L30:
	movl	%esi, %edx
	movzbl	%dl, %eax
	pushl	%eax
	leal	-92(%ebp), %eax
	pushl	%eax
	call	_mouse_decode
	popl	%edx
	popl	%ecx
	decl	%eax
	jne	L23
	movl	-88(%ebp), %eax
	leal	-1668(%ebp), %ecx
	addl	%eax, -1668(%ebp)
	movl	-84(%ebp), %eax
	addl	%eax, -1664(%ebp)
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	%ecx
	call	_MouseCoodinateThreshold
	pushl	-1664(%ebp)
	pushl	-1668(%ebp)
	pushl	-1680(%ebp)
	call	_sheet_slide
	addl	$24, %esp
	testl	$1, -80(%ebp)
	je	L23
	movl	-1664(%ebp), %eax
	subl	$8, %eax
	pushl	%eax
	movl	-1668(%ebp), %eax
	subl	$80, %eax
	pushl	%eax
	pushl	%edi
	call	_sheet_slide
	addl	$12, %esp
	jmp	L23
L29:
	pushl	%eax
	leal	-76(%ebp), %ebx
	pushl	$LC3
	pushl	%ebx
	call	_sprintf
	pushl	$3
	pushl	%ebx
	pushl	$3
	pushl	$7
	pushl	$16
	pushl	$0
	pushl	-1676(%ebp)
	call	_putfont8_sht
	addl	$40, %esp
	cmpl	$339, %esi
	jg	L13
	movb	_keytable.0-256(%esi), %al
	testb	%al, %al
	je	L13
	cmpl	$17, -1700(%ebp)
	jge	L13
	pushl	$1
	movb	%al, -76(%ebp)
	pushl	%ebx
	pushl	$7
	pushl	$0
	pushl	$28
	pushl	-1692(%ebp)
	pushl	%edi
	movb	$0, -75(%ebp)
	call	_putfont8_sht
	addl	$28, %esp
	addl	$8, -1692(%ebp)
	incl	-1700(%ebp)
L13:
	cmpl	$270, %esi
	je	L31
L15:
	movl	-1692(%ebp), %ebx
	pushl	$44
	addl	$8, %ebx
	pushl	%ebx
	pushl	$28
	pushl	-1692(%ebp)
	pushl	-1696(%ebp)
	pushl	4(%edi)
	pushl	(%edi)
	call	_boxfill8
	pushl	$44
	pushl	%ebx
	pushl	$28
	pushl	-1692(%ebp)
	pushl	%edi
	call	_sheet_refresh
	addl	$48, %esp
	jmp	L23
L31:
	cmpl	$8, -1692(%ebp)
	jle	L15
	pushl	$1
	pushl	$LC4
	pushl	$7
	pushl	$0
	pushl	$28
	pushl	-1692(%ebp)
	pushl	%edi
	call	_putfont8_sht
	addl	$28, %esp
	subl	$8, -1692(%ebp)
	decl	-1700(%ebp)
	jmp	L15
L28:
	pushl	-1704(%ebp)
	call	_task_sleep
	call	_io_sti
	popl	%ecx
	jmp	L23
	.balign 2
.globl _memoryUsage
	.def	_memoryUsage;	.scl	2;	.type	32;	.endef
_memoryUsage:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	$-1073741825
	pushl	$4194304
	call	_memtest
	leave
	ret
	.balign 2
.globl _memoryInit
	.def	_memoryInit;	.scl	2;	.type	32;	.endef
_memoryInit:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	movl	12(%ebp), %ebx
	movl	8(%ebp), %esi
	pushl	%ebx
	subl	$4194304, %ebx
	pushl	%esi
	call	_memman_init
	pushl	$647168
	pushl	$4096
	pushl	%esi
	call	_memman_free
	pushl	%ebx
	pushl	$4194304
	pushl	%esi
	call	_memman_free
	leal	-8(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
	.balign 2
.globl _hardWareInit
	.def	_hardWareInit;	.scl	2;	.type	32;	.endef
_hardWareInit:
	pushl	%ebp
	movl	%esp, %ebp
	call	_init_gdtidt
	call	_init_pic
	call	_io_sti
	popl	%ebp
	jmp	_init_pit
	.balign 2
.globl _MouseCoodinateThreshold
	.def	_MouseCoodinateThreshold;	.scl	2;	.type	32;	.endef
_MouseCoodinateThreshold:
	pushl	%ebp
	movl	%esp, %ebp
	movl	8(%ebp), %eax
	cmpl	$0, (%eax)
	js	L40
L36:
	cmpl	$0, 4(%eax)
	js	L41
L37:
	movl	12(%ebp), %edx
	decl	%edx
	cmpl	%edx, (%eax)
	jbe	L38
	movl	%edx, (%eax)
L38:
	movl	16(%ebp), %edx
	decl	%edx
	cmpl	%edx, 4(%eax)
	jbe	L35
	movl	%edx, 4(%eax)
L35:
	popl	%ebp
	ret
L41:
	movl	$0, 4(%eax)
	jmp	L37
L40:
	movl	$0, (%eax)
	jmp	L36
	.balign 2
.globl _makeTextbox8
	.def	_makeTextbox8;	.scl	2;	.type	32;	.endef
_makeTextbox8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$20, %esp
	movl	12(%ebp), %eax
	movl	16(%ebp), %esi
	addl	20(%ebp), %eax
	subl	$3, %esi
	pushl	%esi
	movl	%eax, -16(%ebp)
	movl	16(%ebp), %eax
	addl	24(%ebp), %eax
	movl	%eax, -20(%ebp)
	movl	-16(%ebp), %eax
	incl	%eax
	pushl	%eax
	movl	%eax, -24(%ebp)
	movl	12(%ebp), %eax
	pushl	%esi
	subl	$2, %eax
	pushl	%eax
	movl	%eax, -28(%ebp)
	movl	8(%ebp), %eax
	pushl	$15
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	movl	12(%ebp), %edi
	movl	-20(%ebp), %eax
	subl	$3, %edi
	incl	%eax
	pushl	%eax
	movl	%eax, -32(%ebp)
	pushl	%edi
	movl	8(%ebp), %eax
	pushl	%esi
	pushl	%edi
	pushl	$15
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	movl	8(%ebp), %eax
	addl	$56, %esp
	movl	-20(%ebp), %ebx
	addl	$2, %ebx
	pushl	%ebx
	pushl	-24(%ebp)
	pushl	%ebx
	pushl	%edi
	pushl	$7
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	movl	-16(%ebp), %eax
	pushl	%ebx
	addl	$2, %eax
	pushl	%eax
	pushl	%esi
	pushl	%eax
	movl	8(%ebp), %eax
	pushl	$7
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	movl	8(%ebp), %eax
	addl	$56, %esp
	movl	16(%ebp), %ebx
	subl	$2, %ebx
	movl	12(%ebp), %edi
	pushl	%ebx
	decl	%edi
	pushl	-16(%ebp)
	pushl	%ebx
	pushl	%edi
	pushl	$0
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	movl	8(%ebp), %eax
	pushl	-20(%ebp)
	pushl	-28(%ebp)
	pushl	%ebx
	pushl	-28(%ebp)
	pushl	$0
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	movl	8(%ebp), %eax
	addl	$56, %esp
	pushl	-32(%ebp)
	pushl	-16(%ebp)
	pushl	-32(%ebp)
	pushl	-28(%ebp)
	pushl	$8
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	movl	8(%ebp), %eax
	pushl	-32(%ebp)
	pushl	-24(%ebp)
	pushl	%ebx
	pushl	-24(%ebp)
	pushl	$8
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	movl	16(%ebp), %eax
	addl	$56, %esp
	decl	%eax
	pushl	-20(%ebp)
	pushl	-16(%ebp)
	pushl	%eax
	pushl	%edi
	movzbl	28(%ebp), %eax
	pushl	%eax
	movl	8(%ebp), %eax
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.data
_closebtn.1:
	.ascii "OOOOOOOOOOOOOOO@"
	.ascii "OQQQQQQQQQQQQQ$@"
	.ascii "OQQQQQQQQQQQQQ$@"
	.ascii "OQQQ@@QQQQ@@QQ$@"
	.ascii "OQQQQ@@QQ@@QQQ$@"
	.ascii "OQQQQQ@@@@QQQQ$@"
	.ascii "OQQQQQQ@@QQQQQ$@"
	.ascii "OQQQQQ@@@@QQQQ$@"
	.ascii "OQQQQ@@QQ@@QQQ$@"
	.ascii "OQQQ@@QQQQ@@QQ$@"
	.ascii "OQQQQQQQQQQQQQ$@"
	.ascii "OQQQQQQQQQQQQQ$@"
	.ascii "O$$$$$$$$$$$$$$@"
	.ascii "@@@@@@@@@@@@@@@@"
	.text
	.balign 2
.globl _makeWindow8
	.def	_makeWindow8;	.scl	2;	.type	32;	.endef
_makeWindow8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%edi
	pushl	%edi
	cmpl	$0, 24(%ebp)
	je	L44
	movb	$0, -13(%ebp)
	movb	$7, -14(%ebp)
L45:
	movl	12(%ebp), %eax
	pushl	$0
	decl	%eax
	pushl	%eax
	movl	%eax, -20(%ebp)
	pushl	$0
	pushl	$0
	pushl	$8
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	12(%ebp), %esi
	pushl	$1
	subl	$2, %esi
	pushl	%esi
	pushl	$1
	pushl	$1
	pushl	$7
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %edi
	addl	$56, %esp
	decl	%edi
	pushl	%edi
	pushl	$0
	pushl	$0
	pushl	$0
	pushl	$8
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %ebx
	subl	$2, %ebx
	pushl	%ebx
	pushl	$1
	pushl	$1
	pushl	$1
	pushl	$7
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	addl	$56, %esp
	pushl	%ebx
	pushl	%esi
	pushl	$1
	pushl	%esi
	pushl	$15
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	pushl	%edi
	pushl	-20(%ebp)
	pushl	$0
	pushl	-20(%ebp)
	pushl	$1
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %eax
	addl	$56, %esp
	subl	$3, %eax
	pushl	%eax
	movl	12(%ebp), %eax
	subl	$3, %eax
	pushl	%eax
	pushl	$2
	pushl	$2
	pushl	$8
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	12(%ebp), %eax
	pushl	$20
	subl	$4, %eax
	pushl	%eax
	pushl	$3
	pushl	$3
	movzbl	-14(%ebp), %eax
	pushl	%eax
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	addl	$56, %esp
	pushl	%ebx
	pushl	%esi
	xorl	%esi, %esi
	pushl	%ebx
	pushl	$1
	pushl	$15
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	pushl	%edi
	pushl	-20(%ebp)
	pushl	%edi
	xorl	%edi, %edi
	pushl	$0
	pushl	$7
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	addl	$56, %esp
	pushl	20(%ebp)
	movsbl	-13(%ebp),%eax
	pushl	%eax
	pushl	$4
	pushl	$24
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putstr8_asc
	addl	$24, %esp
	imull	$5, 12(%ebp), %ecx
L61:
	movl	12(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%ecx, %edx
	xorl	%ebx, %ebx
	leal	-21(%eax,%edx), %edx
L60:
	movb	_closebtn.1(%ebx,%esi), %al
	cmpb	$64, %al
	je	L58
	cmpb	$36, %al
	je	L66
	cmpb	$81, %al
	je	L67
L58:
	movb	$7, %al
L55:
	incl	%ebx
	movb	%al, (%edx)
	incl	%edx
	cmpl	$15, %ebx
	jle	L60
	incl	%edi
	addl	$16, %esi
	addl	12(%ebp), %ecx
	cmpl	$13, %edi
	jle	L61
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L67:
	movb	$1, %al
	jmp	L55
L66:
	movb	$15, %al
	jmp	L55
L44:
	movb	$7, -13(%ebp)
	movb	$0, -14(%ebp)
	jmp	L45
	.balign 2
.globl _putfont8_sht
	.def	_putfont8_sht;	.scl	2;	.type	32;	.endef
_putfont8_sht:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$16, %esp
	movl	12(%ebp), %eax
	movl	16(%ebp), %edi
	movl	%eax, -16(%ebp)
	movl	8(%ebp), %esi
	movl	20(%ebp), %eax
	movl	%eax, -20(%ebp)
	movl	28(%ebp), %eax
	movl	%eax, -24(%ebp)
	leal	16(%edi), %eax
	movl	%eax, -28(%ebp)
	pushl	%eax
	movl	-16(%ebp), %eax
	movl	32(%ebp), %ebx
	leal	(%eax,%ebx,8), %ebx
	pushl	%ebx
	pushl	%edi
	pushl	%eax
	movzbl	24(%ebp), %eax
	pushl	%eax
	pushl	4(%esi)
	pushl	(%esi)
	call	_boxfill8
	pushl	-24(%ebp)
	pushl	-20(%ebp)
	pushl	%edi
	pushl	-16(%ebp)
	pushl	4(%esi)
	pushl	(%esi)
	call	_putstr8_asc
	movl	%esi, 8(%ebp)
	movl	-28(%ebp), %eax
	movl	%ebx, 20(%ebp)
	movl	%eax, 24(%ebp)
	movl	%edi, 16(%ebp)
	movl	-16(%ebp), %eax
	addl	$52, %esp
	movl	%eax, 12(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_sheet_refresh
	.data
LC5:
	.ascii "%10d\0"
	.text
	.balign 2
.globl _task_b_main
	.def	_task_b_main;	.scl	2;	.type	32;	.endef
_task_b_main:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%edi, %edi
	pushl	%ebx
	leal	-556(%ebp), %eax
	subl	$564, %esp
	leal	-44(%ebp), %ebx
	movl	$0, -576(%ebp)
	pushl	$0
	pushl	%eax
	pushl	$128
	pushl	%ebx
	call	_fifo32_init
	call	_timer_alloc
	pushl	$100
	pushl	%ebx
	movl	%eax, %esi
	pushl	%eax
	call	_timer_init
	pushl	$100
	pushl	%esi
	call	_timer_settime
	addl	$36, %esp
L76:
	leal	-44(%ebp), %ebx
	call	_io_cli
	pushl	%ebx
	incl	%edi
	call	_fifo32_status
	popl	%edx
	testl	%eax, %eax
	je	L77
	pushl	%ebx
	call	_fifo32_get
	movl	%eax, %ebx
	call	_io_sti
	popl	%ecx
	cmpl	$100, %ebx
	jne	L76
	movl	%edi, %eax
	leal	-572(%ebp), %ebx
	subl	-576(%ebp), %eax
	pushl	%eax
	pushl	$LC5
	pushl	%ebx
	call	_sprintf
	pushl	$11
	pushl	%ebx
	pushl	$8
	pushl	$0
	pushl	$28
	pushl	$24
	pushl	8(%ebp)
	call	_putfont8_sht
	addl	$40, %esp
	movl	%edi, -576(%ebp)
	pushl	$100
	pushl	%esi
	call	_timer_settime
	popl	%eax
	popl	%edx
	jmp	L76
L77:
	call	_io_sti
	jmp	L76
	.def	_sprintf;	.scl	2;	.type	32;	.endef
	.def	_init_pit;	.scl	2;	.type	32;	.endef
	.def	_init_pic;	.scl	2;	.type	32;	.endef
	.def	_init_gdtidt;	.scl	2;	.type	32;	.endef
	.def	_memman_free;	.scl	2;	.type	32;	.endef
	.def	_memman_init;	.scl	2;	.type	32;	.endef
	.def	_memtest;	.scl	2;	.type	32;	.endef
	.def	_MouseCoodinateThreshold;	.scl	2;	.type	32;	.endef
	.def	_mouse_decode;	.scl	2;	.type	32;	.endef
	.def	_putfont8_sht;	.scl	2;	.type	32;	.endef
	.def	_fifo32_get;	.scl	2;	.type	32;	.endef
	.def	_io_sti;	.scl	2;	.type	32;	.endef
	.def	_task_sleep;	.scl	2;	.type	32;	.endef
	.def	_fifo32_status;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_sheet_refresh;	.scl	2;	.type	32;	.endef
	.def	_putstr8_asc;	.scl	2;	.type	32;	.endef
	.def	_memman_total;	.scl	2;	.type	32;	.endef
	.def	_sheet_updown;	.scl	2;	.type	32;	.endef
	.def	_sheet_slide;	.scl	2;	.type	32;	.endef
	.def	_timer_settime;	.scl	2;	.type	32;	.endef
	.def	_timer_init;	.scl	2;	.type	32;	.endef
	.def	_timer_alloc;	.scl	2;	.type	32;	.endef
	.def	_init_mouse_cursol;	.scl	2;	.type	32;	.endef
	.def	_makeTextbox8;	.scl	2;	.type	32;	.endef
	.def	_task_run;	.scl	2;	.type	32;	.endef
	.def	_task_b_main;	.scl	2;	.type	32;	.endef
	.def	_task_alloc;	.scl	2;	.type	32;	.endef
	.def	_makeWindow8;	.scl	2;	.type	32;	.endef
	.def	_boxfill8;	.scl	2;	.type	32;	.endef
	.def	_sheet_setbuf;	.scl	2;	.type	32;	.endef
	.def	_memman_alloc_4k;	.scl	2;	.type	32;	.endef
	.def	_sheet_alloc;	.scl	2;	.type	32;	.endef
	.def	_task_init;	.scl	2;	.type	32;	.endef
	.def	_shtctl_init;	.scl	2;	.type	32;	.endef
	.def	_init_palette;	.scl	2;	.type	32;	.endef
	.def	_memoryUsage;	.scl	2;	.type	32;	.endef
	.def	_memoryInit;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_enable_mouse;	.scl	2;	.type	32;	.endef
	.def	_init_keyboard;	.scl	2;	.type	32;	.endef
	.def	_fifo32_init;	.scl	2;	.type	32;	.endef
	.def	_hardWareInit;	.scl	2;	.type	32;	.endef
