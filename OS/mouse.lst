     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_wait_KBC_sendready
     7 00000000                                 	EXTERN	_io_out8
     8 00000000                                 [FILE "mouse.c"]
     9                                          [SECTION .text]
    10 00000000                                 	GLOBAL	_enable_mouse
    11 00000000                                 _enable_mouse:
    12 00000000 55                              	PUSH	EBP
    13 00000001 89 E5                           	MOV	EBP,ESP
    14 00000003 E8 [00000000]                   	CALL	_wait_KBC_sendready
    15 00000008 68 000000D4                     	PUSH	212
    16 0000000D 6A 64                           	PUSH	100
    17 0000000F E8 [00000000]                   	CALL	_io_out8
    18 00000014 E8 [00000000]                   	CALL	_wait_KBC_sendready
    19 00000019 68 000000F4                     	PUSH	244
    20 0000001E 6A 60                           	PUSH	96
    21 00000020 E8 [00000000]                   	CALL	_io_out8
    22 00000025 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
    23 00000028 C6 40 03 00                     	MOV	BYTE [3+EAX],0
    24 0000002C C9                              	LEAVE
    25 0000002D C3                              	RET
    26 0000002E                                 	GLOBAL	_mouse_decode
    27 0000002E                                 _mouse_decode:
    28 0000002E 55                              	PUSH	EBP
    29 0000002F 89 E5                           	MOV	EBP,ESP
    30 00000031 57                              	PUSH	EDI
    31 00000032 56                              	PUSH	ESI
    32 00000033 31 FF                           	XOR	EDI,EDI
    33 00000035 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
    34 00000038 53                              	PUSH	EBX
    35 00000039 8B 4D 0C                        	MOV	ECX,DWORD [12+EBP]
    36 0000003C 0F B6 42 03                     	MOVZX	EAX,BYTE [3+EDX]
    37 00000040 89 CE                           	MOV	ESI,ECX
    38 00000042 83 F8 01                        	CMP	EAX,1
    39 00000045 74 7C                           	JE	L6
    40 00000047 83 F8 01                        	CMP	EAX,1
    41 0000004A 7E 68                           	JLE	L14
    42 0000004C 83 F8 02                        	CMP	EAX,2
    43 0000004F 74 5A                           	JE	L7
    44 00000051 83 F8 03                        	CMP	EAX,3
    45 00000054 74 0A                           	JE	L8
    46 00000056                                 L11:
    47 00000056 83 CF FF                        	OR	EDI,-1
    48 00000059                                 L3:
    49 00000059 5B                              	POP	EBX
    50 0000005A 89 F8                           	MOV	EAX,EDI
    51 0000005C 5E                              	POP	ESI
    52 0000005D 5F                              	POP	EDI
    53 0000005E 5D                              	POP	EBP
    54 0000005F C3                              	RET
    55 00000060                                 L8:
    56 00000060 8A 1A                           	MOV	BL,BYTE [EDX]
    57 00000062 81 E6 000000FF                  	AND	ESI,255
    58 00000068 89 D8                           	MOV	EAX,EBX
    59 0000006A 88 4A 02                        	MOV	BYTE [2+EDX],CL
    60 0000006D 83 E0 07                        	AND	EAX,7
    61 00000070 BF 00000001                     	MOV	EDI,1
    62 00000075 89 42 0C                        	MOV	DWORD [12+EDX],EAX
    63 00000078 89 72 08                        	MOV	DWORD [8+EDX],ESI
    64 0000007B 88 D8                           	MOV	AL,BL
    65 0000007D 0F B6 4A 01                     	MOVZX	ECX,BYTE [1+EDX]
    66 00000081 83 E0 10                        	AND	EAX,16
    67 00000084 89 4A 04                        	MOV	DWORD [4+EDX],ECX
    68 00000087 C6 42 03 01                     	MOV	BYTE [3+EDX],1
    69 0000008B 84 C0                           	TEST	AL,AL
    70 0000008D 74 09                           	JE	L9
    71 0000008F 81 C9 FFFFFF00                  	OR	ECX,-256
    72 00000095 89 4A 04                        	MOV	DWORD [4+EDX],ECX
    73 00000098                                 L9:
    74 00000098 83 E3 20                        	AND	EBX,32
    75 0000009B 84 DB                           	TEST	BL,BL
    76 0000009D 74 07                           	JE	L10
    77 0000009F 81 4A 08 FFFFFF00               	OR	DWORD [8+EDX],-256
    78 000000A6                                 L10:
    79 000000A6 F7 5A 08                        	NEG	DWORD [8+EDX]
    80 000000A9 EB AE                           	JMP	L3
    81 000000AB                                 L7:
    82 000000AB 88 4A 01                        	MOV	BYTE [1+EDX],CL
    83 000000AE C6 42 03 03                     	MOV	BYTE [3+EDX],3
    84 000000B2 EB A5                           	JMP	L3
    85 000000B4                                 L14:
    86 000000B4 85 C0                           	TEST	EAX,EAX
    87 000000B6 75 9E                           	JNE	L11
    88 000000B8 80 F9 FA                        	CMP	CL,-6
    89 000000BB 75 9C                           	JNE	L3
    90 000000BD C6 42 03 01                     	MOV	BYTE [3+EDX],1
    91 000000C1 EB 96                           	JMP	L3
    92 000000C3                                 L6:
    93 000000C3 88 0A                           	MOV	BYTE [EDX],CL
    94 000000C5 C6 42 03 02                     	MOV	BYTE [3+EDX],2
    95 000000C9 EB 8E                           	JMP	L3
